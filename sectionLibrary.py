import numpy as np

'''UB STEEL SECTION PROPERTIES'''

# G[0], h[1], b[2], tw[3], tf[4], r[5], hi[6], d[7], Iy[8], Wel.y[9], Wpl.y[10], iy[11], Avz[12], Iz[13], Wel.z[14], Wpl.z[15], iz[16], Ss[17], It[18], Iw[19], Aa[20]
# kg/m,  mm,   mm,   mm,     mm,    mm,  mm,    mm,   cm4,     cm3,     cm3,      cm,     cm2,     cm4,     cm3,        cm3,     cm,      cm,    cm4,   cm6x103,  cm2

def UBsectionAgregator(i):
    properties = np.array([UBweight(i), UBheight(i), UBbreath(i), UBwebThickness(i), UBflangeThickness(i), UBrootRadius(i), UBdistanceBetweenFlanges(i), UBdistanceBetweenFillets(i), UBsecondMomentOfAreaYY(i), UBsecondMomentOfAreaZZ(i), UBelasticSectionModulousYY(i), UBplasticSectionModulousYY(i), UBradiusOfGyrationYY(i), UBareaInShear(i), UBsecondMomentOfAreaZZ(i), UBelasticSectionModulousZZ(i), UBplasticSectionModulousZZ(i), UBradiusOfGyrationZZ(i), UBSs(i), UBtorsionalConstant(i), UBwarpingConstant(i), UBarea(i)])
    return properties

def UBnames(i):
    name = np.array(["UB 1100 x 400 x 607", "UB 1100 x 400 x 548", "UB 1100 x 400 x 499", "UB 1100 x 400 x 433", "UB 1100 x 400 x 390", "UB 1100 x 400 x 343", "UB 1016 x 305 x 584", "UB 1016 x 305 x 494""", "UB 1016 x 305 x 438", "UB 1016 x 305 x 415", "UB 1016 x 305 x 393", "UB 1016 x 305 x 350", "UB 1016 x 305 x 314", "UB 1016 x 305 x 272", "UB 1016 x 305 x 249", "UB 1016 x 305 x 222", "UB 1000 x 400 x 976", "UB 1000 x 400 x 883", "UB 1000 x 400 x 748", "UB 1000 x 400 x 642", "UB 1000 x 400 x 591", "UB 1000 x 400 x 554", "UB 1000 x 400 x 539", "UB 1000 x 400 x 483", "UB 1000 x 400 x 443", "UB 1000 x 400 x 412", "UB 1000 x 400 x 371", "UB 1000 x 400 x 321", "UB 1000 x 400 x 296", "UB 920 x 420 x 1377", "UB 920 x 420 x 1269", "UB 920 x 420 x 1194", "UB 920 x 420 x 1077", "UB 920 x 420 x 970", "UB 920 x 420 x 787", "UB 920 x 420 x 725", "UB 920 x 420 x 656", "UB 920 x 420 x 588", "UB 920 x 420 x 537", "UB 920 x 420 x 491", "UB 920 x 420 x 449", "UB 920 x 420 x 420", "UB 920 x 420 x 390", "UB 920 x 420 x 368", "UB 920 x 420 x 344", "UB 914 x 305 x 576", "UB 914 x 305 x 521", "UB 914 x 305 x 474", "UB 914 x 305 x 425", "UB 914 x 305 x 381", "UB 914 x 305 x 345", "UB 914 x 305 x 313", "UB 914 x 305 x 289", "UB 914 x 305 x 271", "UB 914 x 305 x 253", "UB 914 x 305 x 238", "UB 914 x 305 x 224", "UB 914 x 305 x 201", "UB 840 x 400 x 576", "UB 840 x 400 x 527", "UB 840 x 400 x 473", "UB 840 x 400 x 433", "UB 840 x 400 x 392", "UB 840 x 400 x 359", "UB 840 x 400 x 329", "UB 840 x 400 x 299", "UB 838 x 292 x 251", "UB 838 x 292 x 226", "UB 838 x 292 x 194", "UB 838 x 292 x 176", "UB 760 x 380 x 582", "UB 760 x 380 x 531", "UB 760 x 380 x 484", "UB 760 x 380 x 434", "UB 760 x 380 x 389", "UB 760 x 380 x 350", "UB 760 x 380 x 314", "UB 760 x 380 x 284", "UB 760 x 380 x 257", "UB 762 x 267 x 220", "UB 762 x 267 x 197", "UB 762 x 267 x 173", "UB 762 x 267 x 147", "UB 762 x 267 x 134", "UB 690 x 360 x 802", "UB 690 x 360 x 548", "UB 690 x 360 x 500", "UB 690 x 360 x 457", "UB 690 x 360 x 419", "UB 690 x 360 x 384", "UB 690 x 360 x 350", "UB 690 x 360 x 323", "UB 690 x 360 x 289", "UB 690 x 360 x 265", "UB 690 x 360 x 240", "UB 690 x 360 x 217", "UB 686 x 254 x 192", "UB 686 x 254 x 170", "UB 686 x 254 x 152", "UB 686 x 254 x 140", "UB 686 x 254 x 125", "UB 610 x 325 x 551", "UB 610 x 325 x 498", "UB 610 x 325 x 455", "UB 610 x 325 x 415", "UB 610 x 325 x 372", "UB 610 x 325 x 341", "UB 610 x 325 x 307", "UB 610 x 325 x 285", "UB 610 x 325 x 262", "UB 610 x 325 x 241", "UB 610 x 325 x 217", "UB 610 x 325 x 195", "UB 610 x 325 x 174", "UB 610 x 325 x 155", "UB 610 x 305 x 238", "UB 610 x 305 x 179", "UB 610 x 305 x 149", "UB 610 x 229 x 153", "UB 610 x 229 x 140", "UB 610 x 229 x 125", "UB 610 x 229 x 113", "UB 610 x 229 x 101", "UB 610 x 178 x 92", "UB 610 x 178 x 82", "UB 533 x 210 x 138", "UB 533 x 210 x 122", "UB 533 x 210 x 109", "UB 533 x 210 x 101", "UB 533 x 210 x 92", "UB 533 x 210 x 82", "UB 533 x 165 x 85", "UB 533 x 165 x 74", "UB 533 x 165 x 66", "UB 457 x 191 x 106", "UB 457 x 191 x 98", "UB 457 x 191 x 89", "UB 457 x 191 x 82", "UB 457 x 191 x 74", "UB 457 x 191 x 67", "UB 457 x 152 x 82", "UB 457 x 152 x 74", "UB 457 x 152 x 67", "UB 457 x 152 x 60", "UB 457 x 152 x 52", "UB 406 x 178 x 85", "UB 406 x 178 x 74", "UB 406 x 178 x 67", "UB 406 x 178 x 60", "UB 406 x 178 x 54", "UB 406 x 140 x 53", "UB 406 x 140 x 46", "UB 406 x 140 x 39", "UB 356 x 171 x 67", "UB 356 x 171 x 57", "UB 356 x 171 x 51", "UB 356 x 171 x 45", "UB 356 x 127 x 39", "UB 356 x 127 x 33", "UB 305 x 165 x 54", "UB 305 x 165 x 46", "UB 305 x 165 x 40", "UB 305 x 127 x 48", "UB 305 x 127 x 42", "UB 305 x 127 x 37", "UB 305 x 102 x 33", "UB 305 x 102 x 28", "UB 305 x 102 x 25", "UB 254 x 146 x 43", "UB 254 x 146 x 37", "UB 254 x 146 x 31", "UB 254 x 102 x 28", "UB 254 x 102 x 25", "UB 254 x 102 x 22", "UB 203 x 133 x 30", "UB 203 x 133 x 25", "UB 203 x 102 x 23", "UB 178 x 102 x 19", "UB 152 x 89 x 16", "UB 127 x 76 x 13"])
    return name[i]

def UBweight(i):
    G = np.array([607.0, 548.0, 499.0, 433.0, 390.0, 343.0, 584.0, 494.0, 438.0, 415.0, 393.0, 350.0, 314.0, 272.0, 249.0, 222.0, 976.0, 883.0, 748.0, 642.0, 591.0, 554.0, 539.0, 483.0, 443.0, 412.0, 371.0, 321.0, 296.0, 1377.0, 1269.0, 1194.0, 1077.0, 970.0, 787.0, 725.0, 656.0, 588.0, 537.0, 491.0, 449.0, 420.0, 390.0, 368.0, 344.0, 576.0, 521.0, 474.0, 425.0, 381.0, 345.0, 313.0, 289.0, 271.0, 253.0, 238.0, 224.0, 201.0, 576.0, 527.0, 473.0, 433.0, 392.0, 359.0, 329.0, 299.0, 251.0, 226.0, 194.0, 176.0, 582.0, 531.0, 484.0, 434.0, 389.0, 350.0, 314.0, 284.0, 257.0, 220.0, 197.0, 173.0, 147.0, 134.0, 802.0, 548.0, 500.0, 457.0, 419.0, 384.0, 350.0, 323.0, 289.0, 265.0, 240.0, 217.0, 192.0, 170.0, 152.0, 140.0, 125.0, 551, 498, 455, 415, 372, 341, 307, 285, 262, 241, 217, 195, 174, 155, 238.0, 179.0, 149.0, 153.0, 140.0, 125.0, 113.0, 101.0, 92.0, 82.0, 138.0, 122.0, 109.0, 101.0, 92.1, 82.2, 85.0, 74.0, 66.0, 106.0, 98.3, 89.3, 82.0, 74.3, 67.1, 82.1, 74.2, 67.2, 59.8, 52.3, 85.0, 74.2, 67.1, 60.1, 54.1, 53.3, 46.0, 39.0, 67.1, 57.0, 51.0, 45.0, 39.1, 33.1, 54.0, 46.1, 40.3, 48.1, 41.9, 37.0, 32.8, 28.2, 24.8, 43.0, 37.0, 31.1, 28.3, 25.2, 22.0, 30.0, 25.1, 23.1, 19.0, 16.0, 13.0])
    # kg/m
    return G[i]

def UBheight(i):
    h = np.array([1138.0, 1128.0, 1118.0, 1108.0, 1100.0, 1090.0, 1056.0, 1036.0, 1026.0, 1020.0, 1016.0, 1008.0, 1000.0, 990.0, 980.0, 970.0, 1108.0, 1092.0, 1068.0, 1048.0, 1040.0, 1032.0, 1030.0, 1020.0, 1012.0, 1008.0, 1000.0, 990.0, 982.0, 1093.0, 1093.0, 1081.0, 1061.0, 1043.0, 1011.0, 999.0, 987.0, 975.0, 965.0, 957.0, 948.0, 943.0, 936.0, 931.0, 927.0, 993.0, 981.0, 971.0, 961.0, 951.0, 943.0, 932.0, 926.6, 923.0, 918.4, 915.0, 910.4, 903.0, 913.0, 903.0, 893.0, 885.0, 877.0, 868.0, 862.0, 856.0, 859.0, 850.9, 840.7, 834.9, 843.0, 833.0, 823.0, 813.0, 803.0, 795.0, 786.0, 780.0, 772.0, 779.0, 769.8, 762.2, 754.0, 750.0, 826.0, 772.0, 762.0, 752.0, 744.0, 736.0, 728.0, 722.0, 714.0, 706.0, 701.0, 695.0, 702.0, 692.9, 687.5, 683.5, 677.9, 711.0, 699.0, 689.0, 679.0, 669.0, 661.0, 653.0, 647.0, 641.0, 635.0, 628.0, 622.0, 616.0, 611.0, 635.8, 620.2, 612.4, 623.0, 617.2, 612.2, 607.6, 602.6, 603.0, 599.0, 549.0, 544.5, 539.5, 536.7, 533.1, 528.3, 535.0, 529.0, 525.0, 469.0, 467.2, 463.4, 460.0, 457.0, 453.4, 465.8, 462.0, 458.0, 454.6, 449.8, 417.0, 412.8, 409.4, 406.4, 402.6, 406.6, 403.2, 398.0, 363.4, 358.0, 355.0, 351.4, 353.4, 349.0, 310.4, 306.6, 303.4, 311.0, 307.2, 304.4, 312.7, 308.7, 305.1, 259.6, 256.0, 251.4, 260.4, 257.2, 254.0, 206.8, 203.2, 203.2, 177.8, 152.4, 127.0])
    # mm
    return h[i]

def UBbreath(i):
    b = np.array([410.0, 407.0, 405.0, 402.0, 400.0, 400.0, 314.0, 309.0, 305.0, 304.0, 303.0, 302.0, 300.0, 300.0, 300.0, 300.0, 428.0, 424.0, 417.0, 412.0, 409.0, 408.0, 407.0, 404.0, 402.0, 402.0, 400.0, 400.0, 400.0, 473.0, 461.0, 457.0, 451.0, 446.0, 437.0, 434.0, 431.0, 427.0, 425.0, 422.0, 423.0, 422.0, 420.0, 419.0, 418.0, 322.0, 319.0, 316.0, 313.0, 310.0, 308.0, 309.0, 307.7, 307.0, 305.5, 305.0, 304.1, 303.3, 411.0, 409.0, 406.0, 404.0, 401.0, 403.0, 401.0, 400.0, 292.0, 293.8, 292.4, 291.7, 396.0, 393.0, 390.0, 387.0, 385.0, 382.0, 384.0, 382.0, 381.0, 266.0, 268.0, 266.7, 265.2, 264.4, 387.0, 372.0, 369.0, 367.0, 364.0, 362.0, 360.0, 359.0, 356.0, 358.0, 356.0, 355.0, 254.0, 255.8, 254.5, 253.7, 253.0, 347.0, 343.0, 340.0, 338.0, 335.0, 333.0, 330.0, 329.0, 327.0, 329.0, 328.0, 327.0, 325.0, 324.0, 311.4, 307.1, 304.8, 229.0, 230.2, 229.0, 228.2, 227.6, 179.0, 178.0, 214.0, 211.9, 210.8, 210.0, 209.3, 208.8, 166.0, 166.0, 165.0, 194.0, 192.8, 191.9, 191.3, 190.4, 189.9, 155.3, 154.4, 153.8, 152.9, 152.4, 181.0, 179.5, 178.8, 177.9, 177.7, 143.3, 142.2, 141.8, 173.2, 172.2, 171.5, 171.1, 126.0, 125.4, 166.9, 165.7, 165.0, 125.3, 124.3, 123.4, 102.4, 101.8, 101.6, 147.3, 146.4, 146.1, 102.2, 101.9, 101.6, 133.9, 133.2, 101.8, 101.2, 88.7, 76.0])
    return b[i]

def UBwebThickness(i):
    tw = np.array([31.0, 28.0, 26.0, 22.0, 20.0, 18.0, 36.0, 31.0, 26.9, 26.0, 24.4, 21.1, 19.1, 16.5, 16.5, 16.0, 50.0, 45.5, 39.0, 34.0, 31.0, 29.5, 28.4, 25.4, 23.6, 21.1, 19.0, 16.5, 16.5, 76.7, 64.0, 60.5, 55.0, 50.0, 40.9, 38.1, 34.5, 31.0, 28.4, 25.9, 24.0, 22.5, 21.3, 20.3, 19.3, 36.1, 33.0, 30.0, 26.9, 24.4, 22.1, 21.1, 19.5, 18.4, 17.3, 16.5, 15.9, 15.1, 32.0, 29.5, 26.4, 24.4, 22.1, 21.1, 19.7, 18.2, 17.0, 16.1, 14.7, 14.0, 34.5, 31.5, 29.0, 25.9, 23.6, 21.1, 19.7, 18.0, 16.6, 16.5, 15.6, 14.3, 12.8, 12.0, 50.0, 35.1, 32.0, 29.5, 26.9, 24.9, 23.1, 21.1, 19.0, 18.4, 16.8, 15.4, 15.5, 14.5, 13.2, 12.4, 11.7, 38.6, 35.1, 32.0, 29.5, 26.4, 24.4, 22.1, 20.6, 19.0, 17.9, 16.5, 15.4, 14.0, 12.7, 18.4, 14.1, 11.8, 14.0, 13.1, 11.9, 11.1, 10.5, 10.9, 10.0, 14.7, 12.7, 11.6, 10.8, 10.1, 9.6, 10.3, 9.7, 8.9, 12.6, 11.4, 10.5, 9.9, 9.0, 8.5, 10.5, 9.6, 9.0, 8.1, 7.6, 10.9, 9.5, 8.8, 7.9, 7.7, 7.9, 6.8, 6.4, 9.1, 8.1, 7.4, 7.0, 6.6, 6.0, 7.9, 6.7, 6.0, 9.0, 8.0, 7.1, 6.6, 6.0, 5.8, 7.2, 6.3, 6.0, 6.3, 6.0, 5.7, 6.4, 5.7, 5.4, 4.8, 4.5, 4.0])
    # mm
    return tw[i]

def UBflangeThickness(i):
    tf = np.array([55.0, 50.0, 45.0, 40.0, 36.0, 31.0, 64.0, 54.0, 49.0, 46.0, 43.9, 40.0, 35.9, 31.0, 26.0, 21.1, 89.9, 82.0, 70.0, 60.0, 55.9, 52.0, 51.1, 46.0, 41.9, 40.0, 36.1, 31.0, 27.1, 115.1, 115.1, 109.0, 99.1, 89.9, 73.9, 68.1, 62.0, 55.9, 51.1, 47.0, 42.7, 39.9, 36.6, 34.3, 32.0, 65.0, 58.9, 54.1, 49.0, 43.9, 39.9, 34.5, 32.0, 30.0, 27.9, 25.9, 23.9, 20.2, 57.9, 53.1, 48.0, 43.9, 39.9, 35.6, 32.4, 29.2, 31.0, 26.8, 21.7, 18.8, 62.0, 56.9, 52.1, 47.0, 41.9, 38.1, 33.4, 30.1, 27.1, 30.0, 25.4, 21.6, 17.5, 15.5, 89.9, 63.0, 57.9, 53.1, 49.0, 45.0, 40.9, 38.1, 34.0, 30.2, 27.4, 24.8, 27.9, 23.7, 21.0, 19.0, 16.2, 69.1, 63.0, 57.9, 53.1, 48.0, 43.9, 39.9, 37.1, 34.0, 31.0, 27.7, 24.4, 21.6, 19.0, 31.4, 23.6, 19.7, 24.9, 22.1, 19.6, 17.3, 14.8, 15.0, 12.8, 23.6, 21.3, 18.8, 17.4, 15.6, 13.2, 16.5, 13.6, 11.4, 20.6, 19.6, 17.7, 16.0, 14.5, 12.7, 18.9, 17.0, 15.0, 13.3, 10.9, 18.2, 16.0, 14.3, 12.8, 10.9, 12.9, 11.2, 8.6, 15.7, 13.0, 11.5, 9.7, 10.7, 8.5, 13.7, 11.8, 10.2, 14.0, 12.1, 10.7, 10.8, 8.8, 7.0, 12.7, 10.9, 8.6, 10.0, 8.4, 6.8, 9.6, 7.8, 9.3, 7.9, 7.7, 7.6])
    # mm
    return tf[i]

def UBrootRadius(i):
    r = np.array([30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8])
    # mm
    return r[i]

def UBdistanceBetweenFlanges(i):
    hi = np.array([1028.0, 1028.0, 1028.0, 1028.0, 1028.0, 1028.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.3, 797.3, 797.3, 797.3, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.0, 719.0, 719.0, 719.0, 719.0, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.5, 645.5, 645.5, 645.5, 645.5, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 501.9, 501.9, 501.9, 501.9, 501.9, 501.9, 502.0, 502.0, 502.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 332.0, 332.0, 332.0, 332.0, 332.0, 332.0, 283.0, 283.0, 283.0, 283.0, 283.0, 283.0, 291.1, 291.1, 291.1, 234.2, 234.2, 234.2, 240.4, 240.4, 240.4, 187.6, 187.6, 184.6, 162.0, 137.0, 111.8])
    # mm
    return hi[i]

def UBdistanceBetweenFillets(i):
    d = np.array([968.0, 968.0, 968.0, 968.0, 968.0, 968.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.3, 757.3, 757.3, 757.3, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.0, 679.0, 679.0, 679.0, 679.0, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.5, 605.5, 605.5, 605.5, 605.5, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 547.0, 547.0, 475.9, 475.9, 475.9, 475.9, 475.9, 475.9, 476.0, 476.0, 476.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 312.0, 312.0, 312.0, 312.0, 312.0, 312.0, 265.0, 265.0, 265.0, 265.0, 265.0, 265.0, 275.1, 275.1, 275.1, 218.2, 218.2, 218.2, 224.4, 224.4, 224.4, 171.6, 171.6, 168.6, 146.0, 121.0, 95.8])
    # mm
    return d[i]

def UBsecondMomentOfAreaYY(i):
    Iy = np.array([1624100, 1456640, 1305020, 1136540, 1016360, 878350, 1246070, 1027950, 909170, 853120, 807680, 722960, 644210, 553840, 481070, 407660, 2348680, 2096410, 1731940, 1450580, 1331030, 1232370, 1202530, 1067480, 966510, 910470, 813730, 696440, 620310, 3035400, 2901080, 2696760, 2379090, 2104260, 1649860, 1496530, 1339430, 1185310, 1069610, 970410, 878790, 817410, 745810, 696290, 649060, 1102320, 983010, 886280, 788770, 697370, 626190, 548840, 504730, 472170, 436840, 407010, 376950, 325790, 1011770, 915080, 813200, 736270, 659650, 591620, 535820, 481680, 387490, 340800, 280270, 247110, 861550, 776640, 698760, 618840, 545190, 486880, 428860, 383750, 342050, 279390, 241320, 206650, 169870, 152060, 1063170, 672930, 606230, 546550, 495390, 448880, 403400, 371040, 326240, 291790, 262680, 235790, 199440, 171780, 151810, 137720, 119440, 559070, 496220, 446080, 401320, 354790, 319840, 285230, 262280, 237550, 216990, 192360, 169450, 148720, 130550, 210330, 153880, 126730, 126750, 113390, 100220, 88930, 77390, 64680, 56030, 86120, 76080, 66860, 61550, 55260, 47570, 48580, 41090, 35100, 48800, 45710, 40990, 37030, 33300, 29360, 36570, 32650, 28910, 25480, 21350, 31520, 27290, 24310, 21580, 18710, 18270, 15670, 12490, 19450, 16020, 14120, 12050, 10160, 8240, 11690, 9901, 8505, 9577, 8198, 7173, 6512, 5376, 4466, 6550, 5543, 4420, 4012, 3421, 2848, 2900, 2344, 2109, 1359, 836.5, 474.9])
    # cm4
    return Iy[i]

def UBelasticSectionModulousYY(i):
    Wely = np.array([28540, 25820, 23340, 20510, 18470, 16110, 23590, 19840, 17720, 16720, 15890, 14340, 12880, 11180, 9817, 8405, 42390, 38390, 32430, 27680, 25590, 23880, 23350, 20930, 19100, 18060, 16270, 14060, 12630, 55540, 53080, 49890, 44840, 40350, 32630, 29960, 27140, 24310, 22160, 20280, 18540, 17330, 15930, 14950, 14000, 22200, 20040, 18250, 16410, 14660, 13280, 11770, 10890, 10230, 9513, 8896, 8281, 7215, 22160, 20260, 18210, 16630, 15040, 13630, 12430, 11250, 9021, 8010, 6667, 5919, 20440, 18640, 16980, 15220, 13570, 12240, 10910, 9839, 8861, 7173, 6269, 5422, 4505, 4054, 25740, 17430, 15910, 14530, 13310, 12190, 11080, 10270, 9138, 8266, 7494, 6785, 5682, 4958, 4416, 4029, 3524, 15720, 14190, 12940, 11820, 10600, 9677, 8736, 8107, 7411, 6834, 6126, 5448, 4828, 4273, 6616, 4962, 4139, 4069, 3674, 3274, 2927, 2568, 2145, 1870, 3137, 2794, 2478, 2293, 2073, 1801, 1816, 1553, 1337, 2081, 1956, 1769, 1610, 1457, 1295, 1570, 1413, 1262, 1121, 949.4, 1512, 1322, 1188, 1062, 929.4, 898.7, 777.4, 627.9, 1070, 895.4, 795.8, 686.2, 575.1, 472.2, 753.7, 645.8, 560.6, 615.9, 533.7, 471.3, 416.5, 348.3, 292.7, 504.6, 433.1, 351.6, 308.1, 266, 224.2, 280.4, 230.7, 207.5, 152.8, 109.7, 74.79])
    # cm3
    return Wely[i]

def UBplasticSectionModulousYY(i):
    Wply = np.array([33000, 29720, 26810, 23370, 20990, 18270, 28030, 23410, 20740, 19570, 18530, 16580, 14850, 12820, 11340, 9803, 50290, 45260, 37880, 32090, 29520, 27490, 26820, 23920, 21770, 20460, 18360, 15790, 14250, 67740, 64020, 59910, 53450, 47750, 38110, 34830, 31360, 27940, 25360, 23090, 21040, 19620, 18010, 16880, 15790, 26290, 23610, 21400, 19140, 17030, 15360, 13640, 12580, 11790, 10950, 10240, 9547, 8364, 25560, 23270, 20790, 18920, 17040, 15420, 14040, 12680, 10320, 9182, 7668, 6835, 23750, 21550, 19530, 17400, 15450, 13860, 12320, 11070, 9951, 8231, 7205, 6236, 5194, 4682, 30930, 20380, 18490, 16800, 15310, 13960, 12630, 11660, 10320, 9333, 8433, 7613, 6504, 5676, 5046, 4604, 4040, 18650, 16720, 15140, 13750, 12240, 11120, 9984, 9230, 8405, 7726, 6903, 6129, 5417, 4783, 7516, 5578, 4624, 4657, 4199, 3733, 3338, 2938, 2514, 2198, 3614, 3197, 2830, 2613, 2361, 2060, 2105, 1810, 1563, 2386, 2231, 2012, 1830, 1651, 1470, 1810, 1625, 1452, 1286, 1095, 1724, 1500, 1345, 1198, 1053, 1030, 886.9, 723, 1210, 1009, 895.4, 774, 657.9, 542.3, 846.2, 720.2, 623.2, 710.8, 613.7, 539.6, 481.5, 403.6, 342.7, 566.9, 483.8, 393.6, 353.4, 306.1, 259.6, 314.8, 258.2, 234.5, 171.6, 123.6, 84.43])
    # cm3
    return Wply[i]

def UBradiusOfGyrationYY(i):
    iy = np.array([45.7, 45.5, 45.1, 45.2, 45, 44.6, 40.9, 40.4, 40.4, 40.1, 40.1, 40.3, 40.1, 39.9, 38.9, 37.9, 43.4, 43.1, 42.6, 42.1, 42, 41.7, 41.8, 41.6, 41.4, 41.6, 41.4, 41.2, 40.5, 41.5, 42.3, 42, 41.6, 41.2, 40.5, 40.2, 39.9, 39.7, 39.5, 39.3, 39.1, 39, 38.7, 38.5, 38.4, 38.7, 38.4, 38.3, 38.1, 37.8, 37.7, 37.1, 37, 36.9, 36.7, 36.5, 36.3, 35.6, 37.1, 36.8, 36.7, 36.4, 36.3, 35.9, 35.7, 35.5, 34.8, 34.3, 33.6, 33.1, 34, 33.8, 33.6, 33.4, 33.1, 33, 32.6, 32.5, 32.2, 31.4, 30.9, 30.5, 30, 29.7, 32.2, 31, 30.8, 30.6, 30.4, 30.2, 30, 29.9, 29.7, 29.3, 29.2, 29, 28.5, 28, 27.8, 27.6, 27.2, 28.1, 27.9, 27.7, 27.4, 27.2, 27, 26.9, 26.7, 26.6, 26.4, 26.2, 25.9, 25.7, 25.5, 26.2, 25.9, 25.7, 25.3, 25, 24.9, 24.6, 24.3, 23.4, 23.1, 22.1, 22.1, 21.9, 21.8, 21.6, 21.3, 21.2, 20.7, 20.4, 19, 19.1, 18.9, 18.8, 18.7, 18.5, 18.7, 18.5, 18.3, 18.2, 17.9, 17, 16.9, 16.8, 16.7, 16.4, 16.4, 16.3, 15.8, 15, 14.8, 14.7, 14.5, 14.2, 13.9, 13, 12.9, 12.8, 12.5, 12.3, 12.3, 12.4, 12.2, 11.8, 10.9, 10.8, 10.5, 10.5, 10.3, 10, 8.7, 8.5, 8.4, 7.4, 6.4, 5.3])
    # cm
    return iy[i]

def UBareaInShear(i):
    Avz = np.array([376.4, 339.5, 313.7, 266.6, 242.1, 216.9, 403.2, 344.5, 299.9, 288.5, 271.2, 235.9, 213.4, 184.5, 180.7, 172.2, 570.7, 516.4, 438.9, 379.6, 346.3, 328, 316.3, 282.7, 261.8, 235.9, 212.5, 184.5, 181.5, 812.9, 688.7, 647.9, 583.9, 526.8, 425.5, 394, 355.4, 318.2, 290.4, 264.5, 243.9, 228.5, 215.2, 204.5, 194.1, 364.4, 331.2, 300.1, 268.3, 242.3, 218.9, 206.6, 190.6, 179.7, 168.6, 160.4, 153.9, 144.8, 300.2, 275.3, 245.7, 226.2, 204.3, 193.3, 179.8, 165.5, 156.5, 146.8, 132.5, 125.2, 297.6, 270.6, 247.8, 220.6, 199.8, 178.3, 165, 150.4, 137.9, 139, 129.7, 117.9, 104.7, 97.77, 407.4, 277.4, 251.9, 230.8, 209.9, 193.4, 178.5, 162.9, 146.2, 139.8, 127.5, 116.5, 119, 109.9, 99.81, 93.43, 87.33, 278.8, 251.8, 228.5, 209.3, 186.5, 171.5, 154.8, 143.9, 132.3, 123.9, 113.5, 105.2, 95.28, 86.21, 127.2, 96.99, 81.25, 97.12, 90.23, 81.79, 75.87, 71.07, 69.44, 63.39, 84.82, 73.43, 66.73, 62.05, 57.77, 54.33, 59.14, 54.98, 50.12, 61.47, 55.8, 51.19, 48.01, 43.58, 40.85, 51.56, 46.97, 43.72, 39.26, 36.39, 47.96, 41.75, 38.48, 34.51, 33.19, 34.54, 29.75, 27.5, 35.63, 31.4, 28.57, 26.71, 25.61, 22.98, 26.6, 22.57, 20.12, 29.94, 26.48, 23.47, 22.2, 19.95, 18.95, 20.35, 17.73, 16.49, 17.92, 16.82, 15.72, 14.7, 12.93, 12.5, 9.968, 8.292, 6.541])
    # cm2
    return Avz[i]

def UBsecondMomentOfAreaZZ(i):
    Iz = np.array([63470, 56400, 50000, 43420, 38490, 33130, 33430, 26820, 23350, 21700, 20490, 18460, 16230, 14000, 11750, 9545, 118520, 104970, 85110, 70280, 64010, 59090, 57630, 50710, 45490, 43400, 38580, 33120, 28960, 206350, 189900, 175050, 152760, 133870, 103310, 93210, 83050, 72770, 65560, 59010, 53980, 50070, 45270, 42120, 39010, 36520, 32140, 28650, 25190, 21910, 19510, 17040, 15590, 14510, 13300, 12280, 11230, 9423, 67220, 60730, 53670, 48350, 42960, 38900, 34870, 31190, 12900, 11360, 9067, 7800, 64430, 57760, 51660, 45510, 39930, 35460, 31570, 28000, 25010, 9443, 8177, 6851, 5457, 4789, 87540, 54300, 48670, 43890, 39500, 35670, 31870, 29430, 25610, 23130, 20630, 18510, 7645, 6633, 5786, 5185, 4385, 48410, 42590, 38090, 34300, 30170, 27090, 23950, 22060, 19850, 18430, 16310, 14240, 12370, 10780, 15830, 11410, 9309, 5001, 4508, 3935, 3436, 2917, 1441, 1208, 3869, 3387, 2942, 2692, 2389, 2007, 1263, 1041, 857.3, 2514, 2346, 2089, 1870, 1671, 1452, 1184, 1046, 912.5, 794.6, 644.9, 1803, 1545, 1364, 1203, 1021, 634.5, 538, 409.7, 1362, 1108, 968.2, 811, 357.8, 280.2, 1062, 895.6, 764.3, 461, 388.7, 336.1, 194.1, 155.3, 122.9, 677.3, 570.6, 447.5, 178.5, 148.7, 119.3, 384.6, 307.6, 163.8, 136.7, 89.76, 55.75])
    # cm4
    return Iz[i]

def UBelasticSectionModulousZZ(i):
    Welz = np.array([3096, 2771, 2469, 2160, 1924, 1656, 2129, 1736, 1531, 1428, 1352, 1222, 1082, 933.6, 783.6, 636.3, 5538, 4951, 4082, 3411, 3130, 2896, 2832, 2510, 2263, 2159, 1929, 1656, 1448, 8725, 8238, 7660, 6774, 6003, 4728, 4295, 3854, 3408, 3085, 2796, 2552, 2373, 2156, 2010, 1866, 2268, 2015, 1813, 1609, 1413, 1267, 1102, 1013, 945.8, 870.8, 805.6, 739, 621.3, 3271, 2969, 2643, 2393, 2142, 1930, 1739, 1559, 883.7, 773.3, 620.2, 534.8, 3254, 2939, 2649, 2352, 2074, 1856, 1644, 1466, 1313, 710, 610.2, 513.8, 411.5, 362.2, 4524, 2919, 2638, 2392, 2170, 1970, 1771, 1640, 1438, 1292, 1159, 1043, 602, 518.6, 454.7, 408.7, 346.6, 2790, 2483, 2241, 2030, 1801, 1627, 1452, 1341, 1214, 1120, 995, 871, 761.6, 665.7, 1017, 743.1, 610.8, 436.8, 391.7, 343.6, 301.2, 256.3, 161, 135.8, 361.6, 319.7, 279.2, 256.3, 228.3, 192.2, 152.2, 125.4, 103.9, 259.2, 243.4, 217.7, 195.5, 175.5, 152.9, 152.5, 135.5, 118.6, 103.9, 84.63, 199.2, 172.1, 152.6, 135.2, 114.9, 88.56, 75.67, 57.79, 157.2, 128.7, 112.9, 94.8, 56.79, 44.69, 127.3, 108.1, 92.65, 73.59, 62.55, 54.48, 37.91, 30.52, 24.2, 91.97, 77.95, 61.26, 34.94, 29.18, 23.49, 57.45, 46.19, 32.19, 27.02, 20.24, 14.67])
    # cm3
    return Welz[i]

def UBplasticSectionModulousZZ(i):
    Wplz = np.array([4886, 4358, 3879, 3370, 2995, 2575, 3474, 2818, 2462, 2297, 2167, 1940, 1712, 1469, 1244, 1020, 8838, 7873, 6459, 5378, 4915, 4546, 4435, 3918, 3529, 3348, 2984, 2554, 2242, 14160, 13130, 12190, 10740, 9497, 7431, 6739, 6027, 5314, 4799, 4339, 3953, 3671, 3334, 3108, 2884, 3658, 3239, 2901, 2562, 2243, 2003, 1748, 1601, 1491, 1371, 1267, 1163, 982.4, 5101, 4621, 4100, 3706, 3310, 2984, 2687, 2406, 1383, 1212, 974.7, 842.8, 5082, 4579, 4119, 3646, 3211, 2865, 2537, 2259, 2020, 1114, 960.1, 808.9, 648.5, 571.2, 7146, 4565, 4114, 3723, 3369, 3054, 2742, 2532, 2217, 1994, 1786, 1605, 943, 813.3, 712, 639.9, 544.1, 4381, 3889, 3500, 3164, 2799, 2525, 2247, 2073, 1874, 1728, 1533, 1342, 1172, 1024, 1575, 1145, 938.6, 684.9, 613.9, 537.7, 471.5, 402.4, 258.5, 218.2, 568.9, 499.7, 435.8, 399.5, 355.6, 300.4, 241.8, 200.3, 166.1, 405.3, 378.8, 338.3, 303.8, 272, 237.2, 240.3, 213, 186.6, 163, 133.2, 310, 266.9, 236.5, 209, 178.2, 138.9, 118.1, 90.82, 242.9, 198.7, 174.1, 146.5, 89.02, 70.26, 195.6, 165.5, 141.7, 116, 98.42, 85.42, 60.07, 48.48, 38.83, 141.1, 119.4, 94.15, 54.88, 46.03, 37.3, 88.25, 70.97, 49.78, 41.61, 31.2, 22.6])
    # cm3
    return Wplz[i]


def UBradiusOfGyrationZZ(i):
    iz = np.array([9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8])
    # cm
    return iz[i]

def UBSs(i):
    Ss = np.array([17.6, 16.3, 15.1, 13.7, 12.7, 11.5, 19.9, 17.4, 16, 15.3, 14.7, 13.6, 12.6, 11.3, 10.3, 9.3, 26.4, 24.4, 21.4, 18.9, 17.7, 16.8, 16.5, 15.2, 14.2, 13.6, 12.6, 11.3, 10.5, 33.6, 32.3, 30.7, 28.2, 25.9, 21.7, 20.3, 18.7, 17.2, 15.9, 14.9, 13.8, 13.1, 12.3, 11.8, 11.2, 18.9, 17.4, 16.1, 14.8, 13.5, 12.5, 11.3, 10.6, 10.1, 9.6, 9.1, 8.7, 7.8, 17.1, 15.9, 14.5, 13.5, 12.5, 11.5, 10.7, 10, 10.2, 9.3, 8.1, 7.5, 18.1, 16.8, 15.6, 14.3, 13, 12, 10.9, 10.1, 9.4, 9.9, 8.9, 8, 7.1, 6.6, 25.3, 18.4, 17.1, 15.9, 14.8, 13.8, 12.8, 12, 11, 10.2, 9.5, 8.8, 9.4, 8.5, 7.8, 7.3, 6.7, 20, 18.4, 17.1, 15.9, 14.5, 13.5, 12.5, 11.8, 11, 10.3, 9.5, 8.7, 8, 7.4, 10.4, 8.4, 7.4, 8.7, 8, 7.4, 6.9, 6.3, 5.6, 5, 7.7, 7, 6.4, 6, 5.6, 5.1, 5.8, 5.2, 4.6, 6.5, 6.2, 5.7, 5.3, 4.9, 4.5, 6, 5.5, 5, 4.6, 4.1, 5.9, 5.3, 4.9, 4.5, 4.1, 4.5, 4, 3.5, 5.2, 4.5, 4.2, 3.8, 3.9, 3.4, 4.5, 4, 3.6, 4.7, 4.2, 3.9, 3.7, 3.2, 2.9, 4.1, 3.7, 3.2, 3.5, 3.2, 2.8, 3.4, 3, 3.3, 2.9, 2.9, 2.8])
    # cm
    return Ss[i]

def UBtorsionalConstant(i):
    iz = np.array([9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8])
    # cm4
    return iz[i]

def UBwarpingConstant(i):
    Iw = np.array([185250, 163220, 143400, 123500, 108680, 92700, 81240, 64010, 55290, 51080, 48080, 43010, 37530, 32070, 26620, 21370, 304410, 265670, 210640, 170660, 154320, 141320, 137550, 119890, 106730, 101450, 89440, 76020, 65890, 485320, 449320, 409540, 350470, 301870, 225650, 201000, 176960, 153180, 136510, 121870, 110360, 101890, 91390, 84530, 78000, 77860, 67730, 59790, 52070, 44830, 39610, 34160, 31080, 28840, 26280, 24200, 22000, 18300, 122460, 109340, 95560, 85320, 75110, 67260, 59910, 53220, 22040, 19230, 15160, 12940, 97850, 86670, 76520, 66600, 57710, 50690, 44630, 39310, 34650, 13190, 11280, 9364, 7377, 6440, 117630, 67920, 60090, 53420, 47560, 42470, 37530, 34350, 29550, 26360, 23370, 20760, 8656, 7402, 6407, 5708, 4786, 49560, 42840, 37760, 33460, 28990, 25720, 22450, 20470, 18250, 16780, 14670, 12690, 10910, 9436, 14430, 10130, 8165, 4456, 3978, 3444, 2984, 2512, 1239, 1033, 2660, 2311, 1989, 1810, 1596, 1328, 845.4, 688.5, 562.8, 1260, 1172, 1035, 920, 816.5, 703.8, 589, 516.2, 446.2, 385.7, 309.6, 715.1, 607, 531.6, 465.1, 391, 245.1, 206.1, 154.9, 410.9, 329.2, 285.1, 236.3, 104.7, 80.97, 233.6, 194.3, 164.1, 101.2, 84.31, 72.26, 44.03, 34.79, 27.18, 103, 85.61, 65.87, 27.88, 22.92, 18.15, 37.34, 29.32, 15.36, 9.847, 4.687, 1.981])
    # cm6 x 10^6
    return Iw[i]

def UBarea(i):
    Aa = np.array([777.4, 702.5, 639.5, 555.4, 501.3, 440.7, 743.7, 629.1, 556.3, 528.7, 500.2, 445.1, 400.4, 346.8, 316.8, 282.8, 1243.0, 1125.0, 953.4, 817.6, 752.7, 705.8, 687.2, 615.1, 563.7, 525.1, 472.8, 408.8, 377.6, 1753.7, 1616.5, 1521.5, 1371.5, 1236.6, 1002.0, 922.9, 835.3, 748.1, 682.5, 623.3, 571.4, 534.1, 494.3, 465.6, 437.2, 733.2, 663.7, 603.9, 542.0, 485.9, 439.7, 398.4, 368.3, 346.1, 322.8, 303.5, 285.6, 255.9, 735.0, 672.0, 603.0, 552.0, 499.0, 457.0, 419.0, 381.0, 319.3, 288.6, 246.8, 224.0, 742.0, 676.0, 617.0, 553.0, 495.0, 445.0, 400.0, 362.0, 328.0, 280.7, 250.6, 220.4, 187.2, 170.6, 1021.0, 697.4, 636.0, 582.2, 532.4, 488.6, 445.7, 411.8, 366.8, 337.0, 305.6, 277.4, 243.8, 216.8, 194.1, 178.4, 159.5, 702.1, 634.8, 578.6, 529.4, 474.3, 433.7, 391.5, 363.6, 332.7, 308.0, 277.6, 249.3, 222.0, 197.3, 303.3, 228.1, 190.0, 195.7, 178.2, 159.3, 143.9, 128.9, 117.6, 104.4, 176.2, 155.4, 138.9, 128.7, 117.4, 104.7, 107.9, 95.3, 83.8, 134.7, 125.3, 113.8, 104.5, 94.6, 85.5, 104.5, 94.5, 85.6, 76.2, 66.6, 108.2, 94.5, 85.5, 76.5, 69.0, 68.0, 58.6, 49.7, 85.5, 72.6, 64.9, 57.3, 49.8, 42.1, 68.8, 58.7, 51.3, 61.2, 53.4, 47.2, 41.8, 35.9, 31.6, 54.8, 47.2, 39.7, 36.1, 32.0, 28.0, 38.2, 32.0, 29.4, 24.3, 20.3, 16.5])
    # cm2
    return Aa[i]



'''UC SECTIONS - only name weight and Iyy updated so far'''

def UCsectionAgregator(i):
    properties = [UCnames(i), UCweight(i), UCheight(i), UCbreath(i), UCwebThickness(i), UCflangeThickness(i), UCrootRadius(i), UCdistanceBetweenFlanges(i), UCdistanceBetweenFillets(i), UCsecondMomentOfAreaYY(i), UCsecondMomentOfAreaZZ(i), UCelasticSectionModulousYY(i), UCplasticSectionModulousYY(i), UCradiusOfGyrationYY(i), UCareaInShear(i), UCsecondMomentOfAreaZZ(i), UCelasticSectionModulousZZ(i), UCplasticSectionModulousZZ(i), UCradiusOfGyrationZZ(i), UCSs(i), UCtorsionalConstant(i), UCwarpingConstant(i), UCarea(i)]
    return properties

def UCnames(i):
    name = ["UC 356 x 406 x 1299", "UC 356 x 406 x 1202", "UC 356 x 406 x 1086", "UC 356 x 406 x 990", "UC 356 x 406 x 900", "UC 356 x 406 x 818", "UC 356 x 406 x 744", "UC 356 x 406 x 677", "UC 356 x 406 x 634", "UC 356 x 406 x 592", "UC 356 x 406 x 551", "UC 356 x 406 x 509", "UC 356 x 406 x 467", "UC 356 x 406 x 393", "UC 356 x 406 x 340", "UC 356 x 406 x 287", "UC 356 x 406 x 235", "UC 356 x 368 x 202", "UC 356 x 368 x 177", "UC 356 x 368 x 153", "UC 356 x 368 x 129", "UC 305 x 305 x 500", "UC 305 x 305 x 454", "UC 305 x 305 x 415", "UC 305 x 305 x 375", "UC 305 x 305 x 342", "UC 305 x 305 x 313", "UC 305 x 305 x 283", "UC 305 x 305 x 240", "UC 305 x 305 x 198", "UC 305 x 305 x 158", "UC 305 x 305 x 137", "UC 305 x 305 x 118", "UC 305 x 305 x 97", "UC 254 x 254 x 167", "UC 254 x 254 x 132", "UC 254 x 254 x 107", "UC 254 x 254 x 89", "UC 254 x 254 x 73", "UC 203 x 203 x 100", "UC 203 x 203 x 86", "UC 203 x 203 x 71", "UC 203 x 203 x 60", "UC 203 x 203 x 52", "UC 203 x 203 x 46", "UC 152 x 152 x 51", "UC 152 x 152 x 44", "UC 152 x 152 x 37", "UC 152 x 152 x 30", "UC 152 x 152 x 23"]
    return name[i]

def UCweight(i):
    G = [1299.0, 1202.0, 1086.0, 990.0, 900.0, 818.0, 744.0, 677.0, 634.0, 592.0, 551.0, 509.0, 467.0, 393.0, 340.0, 287.0, 235.0, 202.0, 177.0, 153.0, 129.0, 500.0, 545.0, 415.0, 375.0, 342.0, 313.0, 283.0, 240.0, 198.0, 158.0, 137.0, 118.0, 96.9, 167.0, 132.0, 107.0, 88.9, 73.1, 100.0, 86.1, 71.0, 60.0, 52.0, 46.1, 51.0, 44.0, 37.0, 30.0, 23.0]
    # kg/m
    return G[i]

def UCheight(i):
    h = [1138.0, 1128.0, 1118.0, 1108.0, 1100.0, 1090.0, 1056.0, 1036.0, 1026.0, 1020.0, 1016.0, 1008.0, 1000.0, 990.0, 980.0, 970.0, 1108.0, 1092.0, 1068.0, 1048.0, 1040.0, 1032.0, 1030.0, 1020.0, 1012.0, 1008.0, 1000.0, 990.0, 982.0, 1093.0, 1093.0, 1081.0, 1061.0, 1043.0, 1011.0, 999.0, 987.0, 975.0, 965.0, 957.0, 948.0, 943.0, 936.0, 931.0, 927.0, 993.0, 981.0, 971.0, 961.0, 951.0, 943.0, 932.0, 926.6, 923.0, 918.4, 915.0, 910.4, 903.0, 913.0, 903.0, 893.0, 885.0, 877.0, 868.0, 862.0, 856.0, 859.0, 850.9, 840.7, 834.9, 843.0, 833.0, 823.0, 813.0, 803.0, 795.0, 786.0, 780.0, 772.0, 779.0, 769.8, 762.2, 754.0, 750.0, 826.0, 772.0, 762.0, 752.0, 744.0, 736.0, 728.0, 722.0, 714.0, 706.0, 701.0, 695.0, 702.0, 692.9, 687.5, 683.5, 677.9, 711.0, 699.0, 689.0, 679.0, 669.0, 661.0, 653.0, 647.0, 641.0, 635.0, 628.0, 622.0, 616.0, 611.0, 635.8, 620.2, 612.4, 623.0, 617.2, 612.2, 607.6, 602.6, 603.0, 599.0, 549.0, 544.5, 539.5, 536.7, 533.1, 528.3, 535.0, 529.0, 525.0, 469.0, 467.2, 463.4, 460.0, 457.0, 453.4, 465.8, 462.0, 458.0, 454.6, 449.8, 417.0, 412.8, 409.4, 406.4, 402.6, 406.6, 403.2, 398.0, 363.4, 358.0, 355.0, 351.4, 353.4, 349.0, 310.4, 306.6, 303.4, 311.0, 307.2, 304.4, 312.7, 308.7, 305.1, 259.6, 256.0, 251.4, 260.4, 257.2, 254.0, 206.8, 203.2, 203.2, 177.8, 152.4, 127.0]
    # mm
    return h[i]

def UCbreath(i):
    b = [410.0, 407.0, 405.0, 402.0, 400.0, 400.0, 314.0, 309.0, 305.0, 304.0, 303.0, 302.0, 300.0, 300.0, 300.0, 300.0, 428.0, 424.0, 417.0, 412.0, 409.0, 408.0, 407.0, 404.0, 402.0, 402.0, 400.0, 400.0, 400.0, 473.0, 461.0, 457.0, 451.0, 446.0, 437.0, 434.0, 431.0, 427.0, 425.0, 422.0, 423.0, 422.0, 420.0, 419.0, 418.0, 322.0, 319.0, 316.0, 313.0, 310.0, 308.0, 309.0, 307.7, 307.0, 305.5, 305.0, 304.1, 303.3, 411.0, 409.0, 406.0, 404.0, 401.0, 403.0, 401.0, 400.0, 292.0, 293.8, 292.4, 291.7, 396.0, 393.0, 390.0, 387.0, 385.0, 382.0, 384.0, 382.0, 381.0, 266.0, 268.0, 266.7, 265.2, 264.4, 387.0, 372.0, 369.0, 367.0, 364.0, 362.0, 360.0, 359.0, 356.0, 358.0, 356.0, 355.0, 254.0, 255.8, 254.5, 253.7, 253.0, 347.0, 343.0, 340.0, 338.0, 335.0, 333.0, 330.0, 329.0, 327.0, 329.0, 328.0, 327.0, 325.0, 324.0, 311.4, 307.1, 304.8, 229.0, 230.2, 229.0, 228.2, 227.6, 179.0, 178.0, 214.0, 211.9, 210.8, 210.0, 209.3, 208.8, 166.0, 166.0, 165.0, 194.0, 192.8, 191.9, 191.3, 190.4, 189.9, 155.3, 154.4, 153.8, 152.9, 152.4, 181.0, 179.5, 178.8, 177.9, 177.7, 143.3, 142.2, 141.8, 173.2, 172.2, 171.5, 171.1, 126.0, 125.4, 166.9, 165.7, 165.0, 125.3, 124.3, 123.4, 102.4, 101.8, 101.6, 147.3, 146.4, 146.1, 102.2, 101.9, 101.6, 133.9, 133.2, 101.8, 101.2, 88.7, 76.0]
    # mm
    return b[i]

def UCwebThickness(i):
    tw = [31.0, 28.0, 26.0, 22.0, 20.0, 18.0, 36.0, 31.0, 26.9, 26.0, 24.4, 21.1, 19.1, 16.5, 16.5, 16.0, 50.0, 45.5, 39.0, 34.0, 31.0, 29.5, 28.4, 25.4, 23.6, 21.1, 19.0, 16.5, 16.5, 76.7, 64.0, 60.5, 55.0, 50.0, 40.9, 38.1, 34.5, 31.0, 28.4, 25.9, 24.0, 22.5, 21.3, 20.3, 19.3, 36.1, 33.0, 30.0, 26.9, 24.4, 22.1, 21.1, 19.5, 18.4, 17.3, 16.5, 15.9, 15.1, 32.0, 29.5, 26.4, 24.4, 22.1, 21.1, 19.7, 18.2, 17.0, 16.1, 14.7, 14.0, 34.5, 31.5, 29.0, 25.9, 23.6, 21.1, 19.7, 18.0, 16.6, 16.5, 15.6, 14.3, 12.8, 12.0, 50.0, 35.1, 32.0, 29.5, 26.9, 24.9, 23.1, 21.1, 19.0, 18.4, 16.8, 15.4, 15.5, 14.5, 13.2, 12.4, 11.7, 38.6, 35.1, 32.0, 29.5, 26.4, 24.4, 22.1, 20.6, 19.0, 17.9, 16.5, 15.4, 14.0, 12.7, 18.4, 14.1, 11.8, 14.0, 13.1, 11.9, 11.1, 10.5, 10.9, 10.0, 14.7, 12.7, 11.6, 10.8, 10.1, 9.6, 10.3, 9.7, 8.9, 12.6, 11.4, 10.5, 9.9, 9.0, 8.5, 10.5, 9.6, 9.0, 8.1, 7.6, 10.9, 9.5, 8.8, 7.9, 7.7, 7.9, 6.8, 6.4, 9.1, 8.1, 7.4, 7.0, 6.6, 6.0, 7.9, 6.7, 6.0, 9.0, 8.0, 7.1, 6.6, 6.0, 5.8, 7.2, 6.3, 6.0, 6.3, 6.0, 5.7, 6.4, 5.7, 5.4, 4.8, 4.5, 4.0]
    # mm
    return tw[i]

def UCflangeThickness(i):
    tf = [55.0, 50.0, 45.0, 40.0, 36.0, 31.0, 64.0, 54.0, 49.0, 46.0, 43.9, 40.0, 35.9, 31.0, 26.0, 21.1, 89.9, 82.0, 70.0, 60.0, 55.9, 52.0, 51.1, 46.0, 41.9, 40.0, 36.1, 31.0, 27.1, 115.1, 115.1, 109.0, 99.1, 89.9, 73.9, 68.1, 62.0, 55.9, 51.1, 47.0, 42.7, 39.9, 36.6, 34.3, 32.0, 65.0, 58.9, 54.1, 49.0, 43.9, 39.9, 34.5, 32.0, 30.0, 27.9, 25.9, 23.9, 20.2, 57.9, 53.1, 48.0, 43.9, 39.9, 35.6, 32.4, 29.2, 31.0, 26.8, 21.7, 18.8, 62.0, 56.9, 52.1, 47.0, 41.9, 38.1, 33.4, 30.1, 27.1, 30.0, 25.4, 21.6, 17.5, 15.5, 89.9, 63.0, 57.9, 53.1, 49.0, 45.0, 40.9, 38.1, 34.0, 30.2, 27.4, 24.8, 27.9, 23.7, 21.0, 19.0, 16.2, 69.1, 63.0, 57.9, 53.1, 48.0, 43.9, 39.9, 37.1, 34.0, 31.0, 27.7, 24.4, 21.6, 19.0, 31.4, 23.6, 19.7, 24.9, 22.1, 19.6, 17.3, 14.8, 15.0, 12.8, 23.6, 21.3, 18.8, 17.4, 15.6, 13.2, 16.5, 13.6, 11.4, 20.6, 19.6, 17.7, 16.0, 14.5, 12.7, 18.9, 17.0, 15.0, 13.3, 10.9, 18.2, 16.0, 14.3, 12.8, 10.9, 12.9, 11.2, 8.6, 15.7, 13.0, 11.5, 9.7, 10.7, 8.5, 13.7, 11.8, 10.2, 14.0, 12.1, 10.7, 10.8, 8.8, 7.0, 12.7, 10.9, 8.6, 10.0, 8.4, 6.8, 9.6, 7.8, 9.3, 7.9, 7.7, 7.6]
    # mm
    return tf[i]

def UCrootRadius(i):
    r = [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
    # mm
    return r[i]

def UCdistanceBetweenFlanges(i):
    hi = [1028.0, 1028.0, 1028.0, 1028.0, 1028.0, 1028.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 928.0, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 862.8, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.1, 797.3, 797.3, 797.3, 797.3, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.1, 719.0, 719.0, 719.0, 719.0, 719.0, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.9, 645.5, 645.5, 645.5, 645.5, 645.5, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 573.0, 501.9, 501.9, 501.9, 501.9, 501.9, 501.9, 502.0, 502.0, 502.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 428.0, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 380.8, 332.0, 332.0, 332.0, 332.0, 332.0, 332.0, 283.0, 283.0, 283.0, 283.0, 283.0, 283.0, 291.1, 291.1, 291.1, 234.2, 234.2, 234.2, 240.4, 240.4, 240.4, 187.6, 187.6, 184.6, 162.0, 137.0, 111.8]
    # mm
    return hi[i]

def UCdistanceBetweenFillets(i):
    d = [968.0, 968.0, 968.0, 968.0, 968.0, 968.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 868.0, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 812.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 822.8, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.1, 757.3, 757.3, 757.3, 757.3, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.1, 679.0, 679.0, 679.0, 679.0, 679.0, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.9, 605.5, 605.5, 605.5, 605.5, 605.5, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 533.0, 547.0, 547.0, 475.9, 475.9, 475.9, 475.9, 475.9, 475.9, 476.0, 476.0, 476.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 408.0, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 360.8, 312.0, 312.0, 312.0, 312.0, 312.0, 312.0, 265.0, 265.0, 265.0, 265.0, 265.0, 265.0, 275.1, 275.1, 275.1, 218.2, 218.2, 218.2, 224.4, 224.4, 224.4, 171.6, 171.6, 168.6, 146.0, 121.0, 95.8]
    # mm
    return d[i]

def UCsecondMomentOfAreaYY(i):
    Iy = [754950, 663970, 596070, 519260, 450550, 392540, 342470, 299820, 275190, 250510, 227280, 204880, 183340, 146960, 122880, 100220, 79430, 66600, 57460, 48930, 40590, 169080, 148200, 130180, 113040, 100770, 89820, 79120, 64450, 51150, 39000, 33060, 27920, 22500, 30000, 22530, 17510, 14270, 11410, 11320, 9446, 7615, 6121, 5256, 4565, 3229, 2705, 2212, 1750, 1252]
    # cm4
    return Iy[i]

def UCelasticSectionModulousYY(i):
    Wely = [28540, 25820, 23340, 20510, 18470, 16110, 23590, 19840, 17720, 16720, 15890, 14340, 12880, 11180, 9817, 8405, 42390, 38390, 32430, 27680, 25590, 23880, 23350, 20930, 19100, 18060, 16270, 14060, 12630, 55540, 53080, 49890, 44840, 40350, 32630, 29960, 27140, 24310, 22160, 20280, 18540, 17330, 15930, 14950, 14000, 22200, 20040, 18250, 16410, 14660, 13280, 11770, 10890, 10230, 9513, 8896, 8281, 7215, 22160, 20260, 18210, 16630, 15040, 13630, 12430, 11250, 9021, 8010, 6667, 5919, 20440, 18640, 16980, 15220, 13570, 12240, 10910, 9839, 8861, 7173, 6269, 5422, 4505, 4054, 25740, 17430, 15910, 14530, 13310, 12190, 11080, 10270, 9138, 8266, 7494, 6785, 5682, 4958, 4416, 4029, 3524, 15720, 14190, 12940, 11820, 10600, 9677, 8736, 8107, 7411, 6834, 6126, 5448, 4828, 4273, 6616, 4962, 4139, 4069, 3674, 3274, 2927, 2568, 2145, 1870, 3137, 2794, 2478, 2293, 2073, 1801, 1816, 1553, 1337, 2081, 1956, 1769, 1610, 1457, 1295, 1570, 1413, 1262, 1121, 949.4, 1512, 1322, 1188, 1062, 929.4, 898.7, 777.4, 627.9, 1070, 895.4, 795.8, 686.2, 575.1, 472.2, 753.7, 645.8, 560.6, 615.9, 533.7, 471.3, 416.5, 348.3, 292.7, 504.6, 433.1, 351.6, 308.1, 266, 224.2, 280.4, 230.7, 207.5, 152.8, 109.7, 74.79]
    # cm3
    return Wely[i]

def UCplasticSectionModulousYY(i):
    Wply = [33000, 29720, 26810, 23370, 20990, 18270, 28030, 23410, 20740, 19570, 18530, 16580, 14850, 12820, 11340, 9803, 50290, 45260, 37880, 32090, 29520, 27490, 26820, 23920, 21770, 20460, 18360, 15790, 14250, 67740, 64020, 59910, 53450, 47750, 38110, 34830, 31360, 27940, 25360, 23090, 21040, 19620, 18010, 16880, 15790, 26290, 23610, 21400, 19140, 17030, 15360, 13640, 12580, 11790, 10950, 10240, 9547, 8364, 25560, 23270, 20790, 18920, 17040, 15420, 14040, 12680, 10320, 9182, 7668, 6835, 23750, 21550, 19530, 17400, 15450, 13860, 12320, 11070, 9951, 8231, 7205, 6236, 5194, 4682, 30930, 20380, 18490, 16800, 15310, 13960, 12630, 11660, 10320, 9333, 8433, 7613, 6504, 5676, 5046, 4604, 4040, 18650, 16720, 15140, 13750, 12240, 11120, 9984, 9230, 8405, 7726, 6903, 6129, 5417, 4783, 7516, 5578, 4624, 4657, 4199, 3733, 3338, 2938, 2514, 2198, 3614, 3197, 2830, 2613, 2361, 2060, 2105, 1810, 1563, 2386, 2231, 2012, 1830, 1651, 1470, 1810, 1625, 1452, 1286, 1095, 1724, 1500, 1345, 1198, 1053, 1030, 886.9, 723, 1210, 1009, 895.4, 774, 657.9, 542.3, 846.2, 720.2, 623.2, 710.8, 613.7, 539.6, 481.5, 403.6, 342.7, 566.9, 483.8, 393.6, 353.4, 306.1, 259.6, 314.8, 258.2, 234.5, 171.6, 123.6, 84.43]
    # cm3
    return Wply[i]

def UCradiusOfGyrationYY(i):
    iy = [45.7, 45.5, 45.1, 45.2, 45, 44.6, 40.9, 40.4, 40.4, 40.1, 40.1, 40.3, 40.1, 39.9, 38.9, 37.9, 43.4, 43.1, 42.6, 42.1, 42, 41.7, 41.8, 41.6, 41.4, 41.6, 41.4, 41.2, 40.5, 41.5, 42.3, 42, 41.6, 41.2, 40.5, 40.2, 39.9, 39.7, 39.5, 39.3, 39.1, 39, 38.7, 38.5, 38.4, 38.7, 38.4, 38.3, 38.1, 37.8, 37.7, 37.1, 37, 36.9, 36.7, 36.5, 36.3, 35.6, 37.1, 36.8, 36.7, 36.4, 36.3, 35.9, 35.7, 35.5, 34.8, 34.3, 33.6, 33.1, 34, 33.8, 33.6, 33.4, 33.1, 33, 32.6, 32.5, 32.2, 31.4, 30.9, 30.5, 30, 29.7, 32.2, 31, 30.8, 30.6, 30.4, 30.2, 30, 29.9, 29.7, 29.3, 29.2, 29, 28.5, 28, 27.8, 27.6, 27.2, 28.1, 27.9, 27.7, 27.4, 27.2, 27, 26.9, 26.7, 26.6, 26.4, 26.2, 25.9, 25.7, 25.5, 26.2, 25.9, 25.7, 25.3, 25, 24.9, 24.6, 24.3, 23.4, 23.1, 22.1, 22.1, 21.9, 21.8, 21.6, 21.3, 21.2, 20.7, 20.4, 19, 19.1, 18.9, 18.8, 18.7, 18.5, 18.7, 18.5, 18.3, 18.2, 17.9, 17, 16.9, 16.8, 16.7, 16.4, 16.4, 16.3, 15.8, 15, 14.8, 14.7, 14.5, 14.2, 13.9, 13, 12.9, 12.8, 12.5, 12.3, 12.3, 12.4, 12.2, 11.8, 10.9, 10.8, 10.5, 10.5, 10.3, 10, 8.7, 8.5, 8.4, 7.4, 6.4, 5.3]
    # cm
    return iy[i]

def UCareaInShear(i):
    Avz = [376.4, 339.5, 313.7, 266.6, 242.1, 216.9, 403.2, 344.5, 299.9, 288.5, 271.2, 235.9, 213.4, 184.5, 180.7, 172.2, 570.7, 516.4, 438.9, 379.6, 346.3, 328, 316.3, 282.7, 261.8, 235.9, 212.5, 184.5, 181.5, 812.9, 688.7, 647.9, 583.9, 526.8, 425.5, 394, 355.4, 318.2, 290.4, 264.5, 243.9, 228.5, 215.2, 204.5, 194.1, 364.4, 331.2, 300.1, 268.3, 242.3, 218.9, 206.6, 190.6, 179.7, 168.6, 160.4, 153.9, 144.8, 300.2, 275.3, 245.7, 226.2, 204.3, 193.3, 179.8, 165.5, 156.5, 146.8, 132.5, 125.2, 297.6, 270.6, 247.8, 220.6, 199.8, 178.3, 165, 150.4, 137.9, 139, 129.7, 117.9, 104.7, 97.77, 407.4, 277.4, 251.9, 230.8, 209.9, 193.4, 178.5, 162.9, 146.2, 139.8, 127.5, 116.5, 119, 109.9, 99.81, 93.43, 87.33, 278.8, 251.8, 228.5, 209.3, 186.5, 171.5, 154.8, 143.9, 132.3, 123.9, 113.5, 105.2, 95.28, 86.21, 127.2, 96.99, 81.25, 97.12, 90.23, 81.79, 75.87, 71.07, 69.44, 63.39, 84.82, 73.43, 66.73, 62.05, 57.77, 54.33, 59.14, 54.98, 50.12, 61.47, 55.8, 51.19, 48.01, 43.58, 40.85, 51.56, 46.97, 43.72, 39.26, 36.39, 47.96, 41.75, 38.48, 34.51, 33.19, 34.54, 29.75, 27.5, 35.63, 31.4, 28.57, 26.71, 25.61, 22.98, 26.6, 22.57, 20.12, 29.94, 26.48, 23.47, 22.2, 19.95, 18.95, 20.35, 17.73, 16.49, 17.92, 16.82, 15.72, 14.7, 12.93, 12.5, 9.968, 8.292, 6.541]
    # cm2
    return Avz[i]

def UCsecondMomentOfAreaZZ(i):
    Iz = [63470, 56400, 50000, 43420, 38490, 33130, 33430, 26820, 23350, 21700, 20490, 18460, 16230, 14000, 11750, 9545, 118520, 104970, 85110, 70280, 64010, 59090, 57630, 50710, 45490, 43400, 38580, 33120, 28960, 206350, 189900, 175050, 152760, 133870, 103310, 93210, 83050, 72770, 65560, 59010, 53980, 50070, 45270, 42120, 39010, 36520, 32140, 28650, 25190, 21910, 19510, 17040, 15590, 14510, 13300, 12280, 11230, 9423, 67220, 60730, 53670, 48350, 42960, 38900, 34870, 31190, 12900, 11360, 9067, 7800, 64430, 57760, 51660, 45510, 39930, 35460, 31570, 28000, 25010, 9443, 8177, 6851, 5457, 4789, 87540, 54300, 48670, 43890, 39500, 35670, 31870, 29430, 25610, 23130, 20630, 18510, 7645, 6633, 5786, 5185, 4385, 48410, 42590, 38090, 34300, 30170, 27090, 23950, 22060, 19850, 18430, 16310, 14240, 12370, 10780, 15830, 11410, 9309, 5001, 4508, 3935, 3436, 2917, 1441, 1208, 3869, 3387, 2942, 2692, 2389, 2007, 1263, 1041, 857.3, 2514, 2346, 2089, 1870, 1671, 1452, 1184, 1046, 912.5, 794.6, 644.9, 1803, 1545, 1364, 1203, 1021, 634.5, 538, 409.7, 1362, 1108, 968.2, 811, 357.8, 280.2, 1062, 895.6, 764.3, 461, 388.7, 336.1, 194.1, 155.3, 122.9, 677.3, 570.6, 447.5, 178.5, 148.7, 119.3, 384.6, 307.6, 163.8, 136.7, 89.76, 55.75]
    # cm4
    return Iz[i]

def UCelasticSectionModulousZZ(i):
    Welz = [3096, 2771, 2469, 2160, 1924, 1656, 2129, 1736, 1531, 1428, 1352, 1222, 1082, 933.6, 783.6, 636.3, 5538, 4951, 4082, 3411, 3130, 2896, 2832, 2510, 2263, 2159, 1929, 1656, 1448, 8725, 8238, 7660, 6774, 6003, 4728, 4295, 3854, 3408, 3085, 2796, 2552, 2373, 2156, 2010, 1866, 2268, 2015, 1813, 1609, 1413, 1267, 1102, 1013, 945.8, 870.8, 805.6, 739, 621.3, 3271, 2969, 2643, 2393, 2142, 1930, 1739, 1559, 883.7, 773.3, 620.2, 534.8, 3254, 2939, 2649, 2352, 2074, 1856, 1644, 1466, 1313, 710, 610.2, 513.8, 411.5, 362.2, 4524, 2919, 2638, 2392, 2170, 1970, 1771, 1640, 1438, 1292, 1159, 1043, 602, 518.6, 454.7, 408.7, 346.6, 2790, 2483, 2241, 2030, 1801, 1627, 1452, 1341, 1214, 1120, 995, 871, 761.6, 665.7, 1017, 743.1, 610.8, 436.8, 391.7, 343.6, 301.2, 256.3, 161, 135.8, 361.6, 319.7, 279.2, 256.3, 228.3, 192.2, 152.2, 125.4, 103.9, 259.2, 243.4, 217.7, 195.5, 175.5, 152.9, 152.5, 135.5, 118.6, 103.9, 84.63, 199.2, 172.1, 152.6, 135.2, 114.9, 88.56, 75.67, 57.79, 157.2, 128.7, 112.9, 94.8, 56.79, 44.69, 127.3, 108.1, 92.65, 73.59, 62.55, 54.48, 37.91, 30.52, 24.2, 91.97, 77.95, 61.26, 34.94, 29.18, 23.49, 57.45, 46.19, 32.19, 27.02, 20.24, 14.67]
    # cm3
    return Welz[i]

def UCplasticSectionModulousZZ(i):
    Wplz = [4886, 4358, 3879, 3370, 2995, 2575, 3474, 2818, 2462, 2297, 2167, 1940, 1712, 1469, 1244, 1020, 8838, 7873, 6459, 5378, 4915, 4546, 4435, 3918, 3529, 3348, 2984, 2554, 2242, 14160, 13130, 12190, 10740, 9497, 7431, 6739, 6027, 5314, 4799, 4339, 3953, 3671, 3334, 3108, 2884, 3658, 3239, 2901, 2562, 2243, 2003, 1748, 1601, 1491, 1371, 1267, 1163, 982.4, 5101, 4621, 4100, 3706, 3310, 2984, 2687, 2406, 1383, 1212, 974.7, 842.8, 5082, 4579, 4119, 3646, 3211, 2865, 2537, 2259, 2020, 1114, 960.1, 808.9, 648.5, 571.2, 7146, 4565, 4114, 3723, 3369, 3054, 2742, 2532, 2217, 1994, 1786, 1605, 943, 813.3, 712, 639.9, 544.1, 4381, 3889, 3500, 3164, 2799, 2525, 2247, 2073, 1874, 1728, 1533, 1342, 1172, 1024, 1575, 1145, 938.6, 684.9, 613.9, 537.7, 471.5, 402.4, 258.5, 218.2, 568.9, 499.7, 435.8, 399.5, 355.6, 300.4, 241.8, 200.3, 166.1, 405.3, 378.8, 338.3, 303.8, 272, 237.2, 240.3, 213, 186.6, 163, 133.2, 310, 266.9, 236.5, 209, 178.2, 138.9, 118.1, 90.82, 242.9, 198.7, 174.1, 146.5, 89.02, 70.26, 195.6, 165.5, 141.7, 116, 98.42, 85.42, 60.07, 48.48, 38.83, 141.1, 119.4, 94.15, 54.88, 46.03, 37.3, 88.25, 70.97, 49.78, 41.61, 31.2, 22.6]
    # cm3
    return Wplz[i]


def UCradiusOfGyrationZZ(i):
    iz = [9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8]
    # cm
    return iz[i]

def UCSs(i):
    Ss = [17.6, 16.3, 15.1, 13.7, 12.7, 11.5, 19.9, 17.4, 16, 15.3, 14.7, 13.6, 12.6, 11.3, 10.3, 9.3, 26.4, 24.4, 21.4, 18.9, 17.7, 16.8, 16.5, 15.2, 14.2, 13.6, 12.6, 11.3, 10.5, 33.6, 32.3, 30.7, 28.2, 25.9, 21.7, 20.3, 18.7, 17.2, 15.9, 14.9, 13.8, 13.1, 12.3, 11.8, 11.2, 18.9, 17.4, 16.1, 14.8, 13.5, 12.5, 11.3, 10.6, 10.1, 9.6, 9.1, 8.7, 7.8, 17.1, 15.9, 14.5, 13.5, 12.5, 11.5, 10.7, 10, 10.2, 9.3, 8.1, 7.5, 18.1, 16.8, 15.6, 14.3, 13, 12, 10.9, 10.1, 9.4, 9.9, 8.9, 8, 7.1, 6.6, 25.3, 18.4, 17.1, 15.9, 14.8, 13.8, 12.8, 12, 11, 10.2, 9.5, 8.8, 9.4, 8.5, 7.8, 7.3, 6.7, 20, 18.4, 17.1, 15.9, 14.5, 13.5, 12.5, 11.8, 11, 10.3, 9.5, 8.7, 8, 7.4, 10.4, 8.4, 7.4, 8.7, 8, 7.4, 6.9, 6.3, 5.6, 5, 7.7, 7, 6.4, 6, 5.6, 5.1, 5.8, 5.2, 4.6, 6.5, 6.2, 5.7, 5.3, 4.9, 4.5, 6, 5.5, 5, 4.6, 4.1, 5.9, 5.3, 4.9, 4.5, 4.1, 4.5, 4, 3.5, 5.2, 4.5, 4.2, 3.8, 3.9, 3.4, 4.5, 4, 3.6, 4.7, 4.2, 3.9, 3.7, 3.2, 2.9, 4.1, 3.7, 3.2, 3.5, 3.2, 2.8, 3.4, 3, 3.3, 2.9, 2.9, 2.8]
    # cm
    return Ss[i]

def UCtorsionalConstant(i):
    iz = [9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8]
    # cm4
    return iz[i]

def UCwarpingConstant(i):
    Iw = [185250, 163220, 143400, 123500, 108680, 92700, 81240, 64010, 55290, 51080, 48080, 43010, 37530, 32070, 26620, 21370, 304410, 265670, 210640, 170660, 154320, 141320, 137550, 119890, 106730, 101450, 89440, 76020, 65890, 485320, 449320, 409540, 350470, 301870, 225650, 201000, 176960, 153180, 136510, 121870, 110360, 101890, 91390, 84530, 78000, 77860, 67730, 59790, 52070, 44830, 39610, 34160, 31080, 28840, 26280, 24200, 22000, 18300, 122460, 109340, 95560, 85320, 75110, 67260, 59910, 53220, 22040, 19230, 15160, 12940, 97850, 86670, 76520, 66600, 57710, 50690, 44630, 39310, 34650, 13190, 11280, 9364, 7377, 6440, 117630, 67920, 60090, 53420, 47560, 42470, 37530, 34350, 29550, 26360, 23370, 20760, 8656, 7402, 6407, 5708, 4786, 49560, 42840, 37760, 33460, 28990, 25720, 22450, 20470, 18250, 16780, 14670, 12690, 10910, 9436, 14430, 10130, 8165, 4456, 3978, 3444, 2984, 2512, 1239, 1033, 2660, 2311, 1989, 1810, 1596, 1328, 845.4, 688.5, 562.8, 1260, 1172, 1035, 920, 816.5, 703.8, 589, 516.2, 446.2, 385.7, 309.6, 715.1, 607, 531.6, 465.1, 391, 245.1, 206.1, 154.9, 410.9, 329.2, 285.1, 236.3, 104.7, 80.97, 233.6, 194.3, 164.1, 101.2, 84.31, 72.26, 44.03, 34.79, 27.18, 103, 85.61, 65.87, 27.88, 22.92, 18.15, 37.34, 29.32, 15.36, 9.847, 4.687, 1.981]
    # cm6 x 10^6
    return Iw[i]

def UCarea(i):
    Aa = [777.4, 702.5, 639.5, 555.4, 501.3, 440.7, 743.7, 629.1, 556.3, 528.7, 500.2, 445.1, 400.4, 346.8, 316.8, 282.8, 1243.0, 1125.0, 953.4, 817.6, 752.7, 705.8, 687.2, 615.1, 563.7, 525.1, 472.8, 408.8, 377.6, 1753.7, 1616.5, 1521.5, 1371.5, 1236.6, 1002.0, 922.9, 835.3, 748.1, 682.5, 623.3, 571.4, 534.1, 494.3, 465.6, 437.2, 733.2, 663.7, 603.9, 542.0, 485.9, 439.7, 398.4, 368.3, 346.1, 322.8, 303.5, 285.6, 255.9, 735.0, 672.0, 603.0, 552.0, 499.0, 457.0, 419.0, 381.0, 319.3, 288.6, 246.8, 224.0, 742.0, 676.0, 617.0, 553.0, 495.0, 445.0, 400.0, 362.0, 328.0, 280.7, 250.6, 220.4, 187.2, 170.6, 1021.0, 697.4, 636.0, 582.2, 532.4, 488.6, 445.7, 411.8, 366.8, 337.0, 305.6, 277.4, 243.8, 216.8, 194.1, 178.4, 159.5, 702.1, 634.8, 578.6, 529.4, 474.3, 433.7, 391.5, 363.6, 332.7, 308.0, 277.6, 249.3, 222.0, 197.3, 303.3, 228.1, 190.0, 195.7, 178.2, 159.3, 143.9, 128.9, 117.6, 104.4, 176.2, 155.4, 138.9, 128.7, 117.4, 104.7, 107.9, 95.3, 83.8, 134.7, 125.3, 113.8, 104.5, 94.6, 85.5, 104.5, 94.5, 85.6, 76.2, 66.6, 108.2, 94.5, 85.5, 76.5, 69.0, 68.0, 58.6, 49.7, 85.5, 72.6, 64.9, 57.3, 49.8, 42.1, 68.8, 58.7, 51.3, 61.2, 53.4, 47.2, 41.8, 35.9, 31.6, 54.8, 47.2, 39.7, 36.1, 32.0, 28.0, 38.2, 32.0, 29.4, 24.3, 20.3, 16.5]
    # cm2
    return Aa[i]


'''UC SECTIONS LIMITED - only name weight TO Wply updated so far'''

def UCsectionAgregator_ltd(i):
    properties = [UCnames_ltd(i), UCweight_ltd(i), UCheight_ltd(i), UCbreath_ltd(i), UCwebThickness_ltd(i), UCflangeThickness_ltd(i), UCrootRadius_ltd(i), UCdistanceBetweenFlanges_ltd(i), UCdistanceBetweenFillets_ltd(i), UCsecondMomentOfAreaYY_ltd(i), UCelasticSectionModulousYY_ltd(i), UCplasticSectionModulousYY_ltd(i), UCradiusOfGyrationYY(i), UCareaInShear(i), UCsecondMomentOfAreaZZ(i), UCelasticSectionModulousZZ(i), UCplasticSectionModulousZZ(i), UCradiusOfGyrationZZ(i), UCSs(i), UCtorsionalConstant(i), UCwarpingConstant(i), UCarea(i)]
    return properties

def UCnames_ltd(i):
    name = ["UC 356 x 406 x 1299", "UC 356 x 406 x 1202", "UC 356 x 406 x 1086", "UC 356 x 406 x 990", "UC 356 x 406 x 900", "UC 356 x 406 x 818", "UC 356 x 406 x 744", "UC 356 x 406 x 677", "UC 356 x 406 x 634", "UC 356 x 406 x 592", "UC 356 x 406 x 551", "UC 356 x 406 x 509", "UC 356 x 406 x 467", "UC 356 x 406 x 393", "UC 356 x 406 x 340", "UC 356 x 406 x 287", "UC 356 x 406 x 235", "UC 356 x 368 x 202", "UC 356 x 368 x 177", "UC 356 x 368 x 153", "UC 356 x 368 x 129", "UC 305 x 305 x 500", "UC 305 x 305 x 454", "UC 305 x 305 x 415", "UC 305 x 305 x 375", "UC 305 x 305 x 342", "UC 305 x 305 x 313", "UC 305 x 305 x 283", "UC 305 x 305 x 240", "UC 305 x 305 x 198", "UC 305 x 305 x 158", "UC 305 x 305 x 137", "UC 305 x 305 x 118", "UC 305 x 305 x 97", "UC 254 x 254 x 167", "UC 254 x 254 x 132", "UC 254 x 254 x 107", "UC 254 x 254 x 89", "UC 254 x 254 x 73", "UC 203 x 203 x 86", "UC 203 x 203 x 71", "UC 203 x 203 x 60", "UC 203 x 203 x 52", "UC 203 x 203 x 46", "UC 152 x 152 x 37", "UC 152 x 152 x 30", "UC 152 x 152 x 23"]
    return name[i]

def UCweight_ltd(i):
    G = [1299.0, 1202.0, 1086.0, 990.0, 900.0, 818.0, 744.0, 677.0, 634.0, 592.0, 551.0, 509.0, 467.0, 393.0, 340.0, 287.0, 235.0, 202.0, 177.0, 153.0, 129.0, 500.0, 545.0, 415.0, 375.0, 342.0, 313.0, 283.0, 240.0, 198.0, 158.0, 137.0, 118.0, 96.9, 167.0, 132.0, 107.0, 88.9, 73.1, 86.1, 71.0, 60.0, 52.0, 46.1, 37.0, 30.0, 23.0]
    # kg/m
    return G[i]

def UCheight_ltd(i):
    h = [600.0, 580.0, 569.0, 550.0, 531.0, 514.0, 498.0, 483.0, 474.6, 465.0, 455.6, 446.0, 436.6, 419.0, 406.4, 393.6, 381.0, 374.6, 368.2, 362.0, 355.6, 427.0, 415.0, 403.0, 391.0, 382.0, 374.0, 365.3, 352.5, 339.9, 327.1, 320.5, 314.5, 307.9, 289.1, 276.3, 266.7, 260.3, 254.1, 222.2, 215.8, 209.6, 206.2, 203.2, 161.8, 157.6, 152.4]
    # mm
    return h[i]

def UCbreath_ltd(i):
    b = [476.0, 471.0, 454.0, 448.0, 442.0, 437.0, 432.0, 428.0, 424.0, 421.0, 418.5, 416.0, 412.2, 407.0, 403.0, 399.0, 394.8, 374.7, 372.6, 370.5, 368.6, 340.0, 336.0, 334.0, 330.0, 328.0, 325.0, 322.2, 318.4, 314.5, 311.2, 309.2, 307.4, 305.3, 265.2, 261.3, 258.8, 256.3, 254.6, 209.1, 206.4, 205.8, 204.3, 203.6, 154.4, 152.9, 152.2]
    # mm
    return b[i]

def UCwebThickness_ltd(i):
    tw = [100.0, 95.0, 78.0, 71.9, 65.9, 60.5, 55.6, 51.2, 47.6, 45.0, 42.1, 39.1, 35.8, 30.6, 26.6, 22.6, 18.4, 16.5, 14.4, 12.3, 10.4, 45.1, 41.3, 38.9, 35.4, 32.6, 30.0, 26.8, 23.0, 19.1, 15.8, 13.8, 12.0, 9.9, 19.2, 15.3, 12.8, 10.3, 8.6, 12.7, 10.0, 9.4, 7.9, 7.2, 8.0, 6.5, 5.8]
    # mm
    return tw[i]

def UCflangeThickness_ltd(i):
    tf = [140.0, 130.0, 125.0, 115.0, 106.0, 97.0, 88.9, 81.5, 77.0, 72.3, 67.5, 62.7, 58.0, 49.2, 42.9, 36.5, 30.2, 27.0, 23.8, 20.7, 17.5, 75.1, 68.7, 62.7, 57.2, 52.6, 48.3, 44.1, 37.7, 31.4, 25.0, 21.7, 18.7, 15.4, 31.7, 25.3, 20.5, 17.3, 14.2, 20.5, 17.3, 14.2, 12.5, 11.0, 11.5, 9.4, 6.8]
    # mm
    return tf[i]

def UCrootRadius_ltd(i):
    r = [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10, 8, 8, 8]
    # mm
    return r[i]

def UCdistanceBetweenFlanges_ltd(i):
    hi = [320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 277.1, 225.7, 225.7, 225.7, 225.7, 225.7, 181.2, 181.2, 181.2, 181.2, 181.2, 138.8, 138.8, 138.8]
    # mm
    return hi[i]

def UCdistanceBetweenFillets_ltd(i):
    d = [280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 280.0, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 237.1, 199.7, 199.7, 199.7, 199.7, 199.7, 161.2, 161.2, 161.2, 161.2, 161.2, 122.8, 122.8, 122.8]
    # mm
    return d[i]

def UCsecondMomentOfAreaYY_ltd(i):
    Iy = [754950, 663970, 596070, 519260, 450550, 392540, 342470, 299820, 275190, 250510, 227280, 204880, 183340, 146960, 122880, 100220, 79430, 66600, 57460, 48930, 40590, 169080, 148200, 130180, 113040, 100770, 89820, 79120, 64450, 51150, 39000, 33060, 27920, 22500, 30000, 22530, 17510, 14270, 11410, 9446, 7615, 6121, 5256, 4565, 2212, 1750, 1252]
    # cm4
    return Iy[i]

def UCelasticSectionModulousYY_ltd(i):
    Wely = [25160, 22890, 20950, 18880, 16970, 15270, 13750, 12410, 11590, 10770, 9977, 9187, 8398, 7014, 6047, 5092, 4169, 3556, 3121, 2703, 2282, 7919, 7142, 6460, 5782, 5276, 4803, 4332, 3657, 3010, 2384, 2063, 1775, 1461, 2075, 1631, 1313, 1096, 898.4, 850.2, 705.7, 584.1, 509.8, 449.3, 273.5, 222.1, 164.3]
    # cm3
    return Wely[i]

def UCplasticSectionModulousYY_ltd(i):
    Wply = [33260, 30030, 27230, 24300, 21640, 19270, 17180, 15360, 14250, 13160, 12090, 11050, 10020, 8244, 7021, 5834, 4708, 3994, 3477, 2987, 2501, 9895, 8835, 7922, 7023, 6353, 5735, 5124, 4266, 3459, 2699, 2315, 1976, 1611, 2424, 1870, 1485, 1224, 992.7, 976.4, 798.4, 655.7, 567, 497.1, 309.1, 248, 182.3]
    # cm3
    return Wply[i]

def UCradiusOfGyrationYY(i):
    iy = [45.7, 45.5, 45.1, 45.2, 45, 44.6, 40.9, 40.4, 40.4, 40.1, 40.1, 40.3, 40.1, 39.9, 38.9, 37.9, 43.4, 43.1, 42.6, 42.1, 42, 41.7, 41.8, 41.6, 41.4, 41.6, 41.4, 41.2, 40.5, 41.5, 42.3, 42, 41.6, 41.2, 40.5, 40.2, 39.9, 39.7, 39.5, 39.3, 39.1, 39, 38.7, 38.5, 38.4, 38.7, 38.4, 38.3, 38.1, 37.8, 37.7, 37.1, 37, 36.9, 36.7, 36.5, 36.3, 35.6, 37.1, 36.8, 36.7, 36.4, 36.3, 35.9, 35.7, 35.5, 34.8, 34.3, 33.6, 33.1, 34, 33.8, 33.6, 33.4, 33.1, 33, 32.6, 32.5, 32.2, 31.4, 30.9, 30.5, 30, 29.7, 32.2, 31, 30.8, 30.6, 30.4, 30.2, 30, 29.9, 29.7, 29.3, 29.2, 29, 28.5, 28, 27.8, 27.6, 27.2, 28.1, 27.9, 27.7, 27.4, 27.2, 27, 26.9, 26.7, 26.6, 26.4, 26.2, 25.9, 25.7, 25.5, 26.2, 25.9, 25.7, 25.3, 25, 24.9, 24.6, 24.3, 23.4, 23.1, 22.1, 22.1, 21.9, 21.8, 21.6, 21.3, 21.2, 20.7, 20.4, 19, 19.1, 18.9, 18.8, 18.7, 18.5, 18.7, 18.5, 18.3, 18.2, 17.9, 17, 16.9, 16.8, 16.7, 16.4, 16.4, 16.3, 15.8, 15, 14.8, 14.7, 14.5, 14.2, 13.9, 13, 12.9, 12.8, 12.5, 12.3, 12.3, 12.4, 12.2, 11.8, 10.9, 10.8, 10.5, 10.5, 10.3, 10, 8.7, 8.5, 8.4, 7.4, 6.4, 5.3]
    # cm
    return iy[i]

def UCareaInShear(i):
    Avz = [376.4, 339.5, 313.7, 266.6, 242.1, 216.9, 403.2, 344.5, 299.9, 288.5, 271.2, 235.9, 213.4, 184.5, 180.7, 172.2, 570.7, 516.4, 438.9, 379.6, 346.3, 328, 316.3, 282.7, 261.8, 235.9, 212.5, 184.5, 181.5, 812.9, 688.7, 647.9, 583.9, 526.8, 425.5, 394, 355.4, 318.2, 290.4, 264.5, 243.9, 228.5, 215.2, 204.5, 194.1, 364.4, 331.2, 300.1, 268.3, 242.3, 218.9, 206.6, 190.6, 179.7, 168.6, 160.4, 153.9, 144.8, 300.2, 275.3, 245.7, 226.2, 204.3, 193.3, 179.8, 165.5, 156.5, 146.8, 132.5, 125.2, 297.6, 270.6, 247.8, 220.6, 199.8, 178.3, 165, 150.4, 137.9, 139, 129.7, 117.9, 104.7, 97.77, 407.4, 277.4, 251.9, 230.8, 209.9, 193.4, 178.5, 162.9, 146.2, 139.8, 127.5, 116.5, 119, 109.9, 99.81, 93.43, 87.33, 278.8, 251.8, 228.5, 209.3, 186.5, 171.5, 154.8, 143.9, 132.3, 123.9, 113.5, 105.2, 95.28, 86.21, 127.2, 96.99, 81.25, 97.12, 90.23, 81.79, 75.87, 71.07, 69.44, 63.39, 84.82, 73.43, 66.73, 62.05, 57.77, 54.33, 59.14, 54.98, 50.12, 61.47, 55.8, 51.19, 48.01, 43.58, 40.85, 51.56, 46.97, 43.72, 39.26, 36.39, 47.96, 41.75, 38.48, 34.51, 33.19, 34.54, 29.75, 27.5, 35.63, 31.4, 28.57, 26.71, 25.61, 22.98, 26.6, 22.57, 20.12, 29.94, 26.48, 23.47, 22.2, 19.95, 18.95, 20.35, 17.73, 16.49, 17.92, 16.82, 15.72, 14.7, 12.93, 12.5, 9.968, 8.292, 6.541]
    # cm2
    return Avz[i]

def UCsecondMomentOfAreaZZ(i):
    Iz = [63470, 56400, 50000, 43420, 38490, 33130, 33430, 26820, 23350, 21700, 20490, 18460, 16230, 14000, 11750, 9545, 118520, 104970, 85110, 70280, 64010, 59090, 57630, 50710, 45490, 43400, 38580, 33120, 28960, 206350, 189900, 175050, 152760, 133870, 103310, 93210, 83050, 72770, 65560, 59010, 53980, 50070, 45270, 42120, 39010, 36520, 32140, 28650, 25190, 21910, 19510, 17040, 15590, 14510, 13300, 12280, 11230, 9423, 67220, 60730, 53670, 48350, 42960, 38900, 34870, 31190, 12900, 11360, 9067, 7800, 64430, 57760, 51660, 45510, 39930, 35460, 31570, 28000, 25010, 9443, 8177, 6851, 5457, 4789, 87540, 54300, 48670, 43890, 39500, 35670, 31870, 29430, 25610, 23130, 20630, 18510, 7645, 6633, 5786, 5185, 4385, 48410, 42590, 38090, 34300, 30170, 27090, 23950, 22060, 19850, 18430, 16310, 14240, 12370, 10780, 15830, 11410, 9309, 5001, 4508, 3935, 3436, 2917, 1441, 1208, 3869, 3387, 2942, 2692, 2389, 2007, 1263, 1041, 857.3, 2514, 2346, 2089, 1870, 1671, 1452, 1184, 1046, 912.5, 794.6, 644.9, 1803, 1545, 1364, 1203, 1021, 634.5, 538, 409.7, 1362, 1108, 968.2, 811, 357.8, 280.2, 1062, 895.6, 764.3, 461, 388.7, 336.1, 194.1, 155.3, 122.9, 677.3, 570.6, 447.5, 178.5, 148.7, 119.3, 384.6, 307.6, 163.8, 136.7, 89.76, 55.75]
    # cm4
    return Iz[i]

def UCelasticSectionModulousZZ(i):
    Welz = [3096, 2771, 2469, 2160, 1924, 1656, 2129, 1736, 1531, 1428, 1352, 1222, 1082, 933.6, 783.6, 636.3, 5538, 4951, 4082, 3411, 3130, 2896, 2832, 2510, 2263, 2159, 1929, 1656, 1448, 8725, 8238, 7660, 6774, 6003, 4728, 4295, 3854, 3408, 3085, 2796, 2552, 2373, 2156, 2010, 1866, 2268, 2015, 1813, 1609, 1413, 1267, 1102, 1013, 945.8, 870.8, 805.6, 739, 621.3, 3271, 2969, 2643, 2393, 2142, 1930, 1739, 1559, 883.7, 773.3, 620.2, 534.8, 3254, 2939, 2649, 2352, 2074, 1856, 1644, 1466, 1313, 710, 610.2, 513.8, 411.5, 362.2, 4524, 2919, 2638, 2392, 2170, 1970, 1771, 1640, 1438, 1292, 1159, 1043, 602, 518.6, 454.7, 408.7, 346.6, 2790, 2483, 2241, 2030, 1801, 1627, 1452, 1341, 1214, 1120, 995, 871, 761.6, 665.7, 1017, 743.1, 610.8, 436.8, 391.7, 343.6, 301.2, 256.3, 161, 135.8, 361.6, 319.7, 279.2, 256.3, 228.3, 192.2, 152.2, 125.4, 103.9, 259.2, 243.4, 217.7, 195.5, 175.5, 152.9, 152.5, 135.5, 118.6, 103.9, 84.63, 199.2, 172.1, 152.6, 135.2, 114.9, 88.56, 75.67, 57.79, 157.2, 128.7, 112.9, 94.8, 56.79, 44.69, 127.3, 108.1, 92.65, 73.59, 62.55, 54.48, 37.91, 30.52, 24.2, 91.97, 77.95, 61.26, 34.94, 29.18, 23.49, 57.45, 46.19, 32.19, 27.02, 20.24, 14.67]
    # cm3
    return Welz[i]

def UCplasticSectionModulousZZ(i):
    Wplz = [4886, 4358, 3879, 3370, 2995, 2575, 3474, 2818, 2462, 2297, 2167, 1940, 1712, 1469, 1244, 1020, 8838, 7873, 6459, 5378, 4915, 4546, 4435, 3918, 3529, 3348, 2984, 2554, 2242, 14160, 13130, 12190, 10740, 9497, 7431, 6739, 6027, 5314, 4799, 4339, 3953, 3671, 3334, 3108, 2884, 3658, 3239, 2901, 2562, 2243, 2003, 1748, 1601, 1491, 1371, 1267, 1163, 982.4, 5101, 4621, 4100, 3706, 3310, 2984, 2687, 2406, 1383, 1212, 974.7, 842.8, 5082, 4579, 4119, 3646, 3211, 2865, 2537, 2259, 2020, 1114, 960.1, 808.9, 648.5, 571.2, 7146, 4565, 4114, 3723, 3369, 3054, 2742, 2532, 2217, 1994, 1786, 1605, 943, 813.3, 712, 639.9, 544.1, 4381, 3889, 3500, 3164, 2799, 2525, 2247, 2073, 1874, 1728, 1533, 1342, 1172, 1024, 1575, 1145, 938.6, 684.9, 613.9, 537.7, 471.5, 402.4, 258.5, 218.2, 568.9, 499.7, 435.8, 399.5, 355.6, 300.4, 241.8, 200.3, 166.1, 405.3, 378.8, 338.3, 303.8, 272, 237.2, 240.3, 213, 186.6, 163, 133.2, 310, 266.9, 236.5, 209, 178.2, 138.9, 118.1, 90.82, 242.9, 198.7, 174.1, 146.5, 89.02, 70.26, 195.6, 165.5, 141.7, 116, 98.42, 85.42, 60.07, 48.48, 38.83, 141.1, 119.4, 94.15, 54.88, 46.03, 37.3, 88.25, 70.97, 49.78, 41.61, 31.2, 22.6]
    # cm3
    return Wplz[i]


def UCradiusOfGyrationZZ(i):
    iz = [9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8]
    # cm
    return iz[i]

def UCSs(i):
    Ss = [17.6, 16.3, 15.1, 13.7, 12.7, 11.5, 19.9, 17.4, 16, 15.3, 14.7, 13.6, 12.6, 11.3, 10.3, 9.3, 26.4, 24.4, 21.4, 18.9, 17.7, 16.8, 16.5, 15.2, 14.2, 13.6, 12.6, 11.3, 10.5, 33.6, 32.3, 30.7, 28.2, 25.9, 21.7, 20.3, 18.7, 17.2, 15.9, 14.9, 13.8, 13.1, 12.3, 11.8, 11.2, 18.9, 17.4, 16.1, 14.8, 13.5, 12.5, 11.3, 10.6, 10.1, 9.6, 9.1, 8.7, 7.8, 17.1, 15.9, 14.5, 13.5, 12.5, 11.5, 10.7, 10, 10.2, 9.3, 8.1, 7.5, 18.1, 16.8, 15.6, 14.3, 13, 12, 10.9, 10.1, 9.4, 9.9, 8.9, 8, 7.1, 6.6, 25.3, 18.4, 17.1, 15.9, 14.8, 13.8, 12.8, 12, 11, 10.2, 9.5, 8.8, 9.4, 8.5, 7.8, 7.3, 6.7, 20, 18.4, 17.1, 15.9, 14.5, 13.5, 12.5, 11.8, 11, 10.3, 9.5, 8.7, 8, 7.4, 10.4, 8.4, 7.4, 8.7, 8, 7.4, 6.9, 6.3, 5.6, 5, 7.7, 7, 6.4, 6, 5.6, 5.1, 5.8, 5.2, 4.6, 6.5, 6.2, 5.7, 5.3, 4.9, 4.5, 6, 5.5, 5, 4.6, 4.1, 5.9, 5.3, 4.9, 4.5, 4.1, 4.5, 4, 3.5, 5.2, 4.5, 4.2, 3.8, 3.9, 3.4, 4.5, 4, 3.6, 4.7, 4.2, 3.9, 3.7, 3.2, 2.9, 4.1, 3.7, 3.2, 3.5, 3.2, 2.8, 3.4, 3, 3.3, 2.9, 2.9, 2.8]
    # cm
    return Ss[i]

def UCtorsionalConstant(i):
    iz = [9, 8.9, 8.8, 8.8, 8.7, 8.6, 6.7, 6.5, 6.4, 6.4, 6.4, 6.4, 6.3, 6.3, 6, 5.8, 9.7, 9.6, 9.4, 9.2, 9.2, 9.1, 9.1, 9, 8.9, 9, 9, 9, 8.7, 10.8, 10.8, 10.7, 10.5, 10.3, 10.1, 10, 9.9, 9.8, 9.7, 9.7, 9.7, 9.6, 9.5, 9.4, 9.4, 7, 6.9, 6.8, 6.8, 6.7, 6.6, 6.5, 6.5, 6.4, 6.4, 6.3, 6.2, 6, 9.5, 9.5, 9.4, 9.3, 9.2, 9.2, 9.1, 9, 6.3, 6.2, 6, 5.8, 9.3, 9.2, 9.1, 9, 8.9, 8.9, 8.8, 8.7, 8.7, 5.7, 5.6, 5.5, 5.3, 5.2, 9.2, 8.8, 8.7, 8.6, 8.6, 8.5, 8.4, 8.4, 8.3, 8.2, 8.1, 8.1, 5.5, 5.5, 5.4, 5.3, 5.2, 8.2, 8.1, 8, 8, 7.9, 7.8, 7.8, 7.7, 7.7, 7.7, 7.6, 7.5, 7.4, 7.3, 7.2, 7, 6.9, 5, 5, 4.9, 4.8, 4.7, 3.5, 3.4, 4.6, 4.6, 4.6, 4.5, 4.5, 4.3, 3.4, 3.3, 3.1, 4.3, 4.3, 4.2, 4.2, 4.2, 4.1, 3.3, 3.3, 3.2, 3.2, 3.1, 4, 4, 3.9, 3.9, 3.8, 3, 3, 2.8, 3.9, 3.9, 3.8, 3.7, 2.6, 2.5, 3.9, 3.9, 3.8, 2.7, 2.6, 2.6, 2.1, 2, 1.9, 3.5, 3.4, 3.3, 2.2, 2.1, 2, 3.1, 3, 2.3, 2.3, 2, 1.8]
    # cm4
    return iz[i]

def UCwarpingConstant(i):
    Iw = [185250, 163220, 143400, 123500, 108680, 92700, 81240, 64010, 55290, 51080, 48080, 43010, 37530, 32070, 26620, 21370, 304410, 265670, 210640, 170660, 154320, 141320, 137550, 119890, 106730, 101450, 89440, 76020, 65890, 485320, 449320, 409540, 350470, 301870, 225650, 201000, 176960, 153180, 136510, 121870, 110360, 101890, 91390, 84530, 78000, 77860, 67730, 59790, 52070, 44830, 39610, 34160, 31080, 28840, 26280, 24200, 22000, 18300, 122460, 109340, 95560, 85320, 75110, 67260, 59910, 53220, 22040, 19230, 15160, 12940, 97850, 86670, 76520, 66600, 57710, 50690, 44630, 39310, 34650, 13190, 11280, 9364, 7377, 6440, 117630, 67920, 60090, 53420, 47560, 42470, 37530, 34350, 29550, 26360, 23370, 20760, 8656, 7402, 6407, 5708, 4786, 49560, 42840, 37760, 33460, 28990, 25720, 22450, 20470, 18250, 16780, 14670, 12690, 10910, 9436, 14430, 10130, 8165, 4456, 3978, 3444, 2984, 2512, 1239, 1033, 2660, 2311, 1989, 1810, 1596, 1328, 845.4, 688.5, 562.8, 1260, 1172, 1035, 920, 816.5, 703.8, 589, 516.2, 446.2, 385.7, 309.6, 715.1, 607, 531.6, 465.1, 391, 245.1, 206.1, 154.9, 410.9, 329.2, 285.1, 236.3, 104.7, 80.97, 233.6, 194.3, 164.1, 101.2, 84.31, 72.26, 44.03, 34.79, 27.18, 103, 85.61, 65.87, 27.88, 22.92, 18.15, 37.34, 29.32, 15.36, 9.847, 4.687, 1.981]
    # cm6 x 10^6
    return Iw[i]

def UCarea(i):
    Aa = [777.4, 702.5, 639.5, 555.4, 501.3, 440.7, 743.7, 629.1, 556.3, 528.7, 500.2, 445.1, 400.4, 346.8, 316.8, 282.8, 1243.0, 1125.0, 953.4, 817.6, 752.7, 705.8, 687.2, 615.1, 563.7, 525.1, 472.8, 408.8, 377.6, 1753.7, 1616.5, 1521.5, 1371.5, 1236.6, 1002.0, 922.9, 835.3, 748.1, 682.5, 623.3, 571.4, 534.1, 494.3, 465.6, 437.2, 733.2, 663.7, 603.9, 542.0, 485.9, 439.7, 398.4, 368.3, 346.1, 322.8, 303.5, 285.6, 255.9, 735.0, 672.0, 603.0, 552.0, 499.0, 457.0, 419.0, 381.0, 319.3, 288.6, 246.8, 224.0, 742.0, 676.0, 617.0, 553.0, 495.0, 445.0, 400.0, 362.0, 328.0, 280.7, 250.6, 220.4, 187.2, 170.6, 1021.0, 697.4, 636.0, 582.2, 532.4, 488.6, 445.7, 411.8, 366.8, 337.0, 305.6, 277.4, 243.8, 216.8, 194.1, 178.4, 159.5, 702.1, 634.8, 578.6, 529.4, 474.3, 433.7, 391.5, 363.6, 332.7, 308.0, 277.6, 249.3, 222.0, 197.3, 303.3, 228.1, 190.0, 195.7, 178.2, 159.3, 143.9, 128.9, 117.6, 104.4, 176.2, 155.4, 138.9, 128.7, 117.4, 104.7, 107.9, 95.3, 83.8, 134.7, 125.3, 113.8, 104.5, 94.6, 85.5, 104.5, 94.5, 85.6, 76.2, 66.6, 108.2, 94.5, 85.5, 76.5, 69.0, 68.0, 58.6, 49.7, 85.5, 72.6, 64.9, 57.3, 49.8, 42.1, 68.8, 58.7, 51.3, 61.2, 53.4, 47.2, 41.8, 35.9, 31.6, 54.8, 47.2, 39.7, 36.1, 32.0, 28.0, 38.2, 32.0, 29.4, 24.3, 20.3, 16.5]
    # cm2
    return Aa[i]